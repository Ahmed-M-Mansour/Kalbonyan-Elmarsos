{
  "version": 3,
  "sources": ["../../../../node_modules/stripe/lib/ResourceNamespace.js", "../../../../node_modules/qs/lib/formats.js", "../../../../node_modules/qs/lib/utils.js", "../../../../node_modules/qs/lib/stringify.js", "../../../../node_modules/qs/lib/parse.js", "../../../../node_modules/qs/lib/index.js", "../../../../node_modules/stripe/lib/utils.js", "../../../../node_modules/stripe/lib/Error.js", "../../../../node_modules/stripe/lib/net/HttpClient.js", "../../../../node_modules/stripe/lib/makeRequest.js", "../../../../node_modules/stripe/lib/autoPagination.js", "../../../../node_modules/stripe/lib/StripeMethod.js", "../../../../node_modules/stripe/lib/StripeMethod.basic.js", "../../../../node_modules/stripe/lib/StripeResource.js", "../../../../node_modules/stripe/lib/resources/Accounts.js", "../../../../node_modules/stripe/lib/resources/AccountLinks.js", "../../../../node_modules/stripe/lib/resources/ApplePayDomains.js", "../../../../node_modules/stripe/lib/resources/ApplicationFees.js", "../../../../node_modules/stripe/lib/resources/Balance.js", "../../../../node_modules/stripe/lib/resources/BalanceTransactions.js", "../../../../node_modules/stripe/lib/resources/Charges.js", "../../../../node_modules/stripe/lib/resources/CountrySpecs.js", "../../../../node_modules/stripe/lib/resources/Coupons.js", "../../../../node_modules/stripe/lib/resources/CreditNotes.js", "../../../../node_modules/stripe/lib/resources/Customers.js", "../../../../node_modules/stripe/lib/resources/Disputes.js", "../../../../node_modules/stripe/lib/resources/EphemeralKeys.js", "../../../../node_modules/stripe/lib/resources/Events.js", "../../../../node_modules/stripe/lib/resources/ExchangeRates.js", "../../../../node_modules/stripe/lib/multipart.js", "../../../../node_modules/stripe/lib/resources/Files.js", "../../../../node_modules/stripe/lib/resources/FileLinks.js", "../../../../node_modules/stripe/lib/resources/Invoices.js", "../../../../node_modules/stripe/lib/resources/InvoiceItems.js", "../../../../node_modules/stripe/lib/resources/IssuerFraudRecords.js", "../../../../node_modules/stripe/lib/resources/Mandates.js", "../../../../node_modules/stripe/lib/resources/OAuth.js", "../../../../node_modules/stripe/lib/resources/Orders.js", "../../../../node_modules/stripe/lib/resources/OrderReturns.js", "../../../../node_modules/stripe/lib/resources/PaymentIntents.js", "../../../../node_modules/stripe/lib/resources/PaymentLinks.js", "../../../../node_modules/stripe/lib/resources/PaymentMethods.js", "../../../../node_modules/stripe/lib/resources/Payouts.js", "../../../../node_modules/stripe/lib/resources/Plans.js", "../../../../node_modules/stripe/lib/resources/Prices.js", "../../../../node_modules/stripe/lib/resources/Products.js", "../../../../node_modules/stripe/lib/resources/PromotionCodes.js", "../../../../node_modules/stripe/lib/resources/Quotes.js", "../../../../node_modules/stripe/lib/resources/Refunds.js", "../../../../node_modules/stripe/lib/resources/Reviews.js", "../../../../node_modules/stripe/lib/resources/SetupAttempts.js", "../../../../node_modules/stripe/lib/resources/SetupIntents.js", "../../../../node_modules/stripe/lib/resources/ShippingRates.js", "../../../../node_modules/stripe/lib/resources/SKUs.js", "../../../../node_modules/stripe/lib/resources/Sources.js", "../../../../node_modules/stripe/lib/resources/Subscriptions.js", "../../../../node_modules/stripe/lib/resources/SubscriptionItems.js", "../../../../node_modules/stripe/lib/resources/SubscriptionSchedules.js", "../../../../node_modules/stripe/lib/resources/TaxCodes.js", "../../../../node_modules/stripe/lib/resources/TaxRates.js", "../../../../node_modules/stripe/lib/resources/Tokens.js", "../../../../node_modules/stripe/lib/resources/Topups.js", "../../../../node_modules/stripe/lib/resources/Transfers.js", "../../../../node_modules/stripe/lib/resources/WebhookEndpoints.js", "../../../../node_modules/stripe/lib/resources/BillingPortal/Configurations.js", "../../../../node_modules/stripe/lib/resources/BillingPortal/Sessions.js", "../../../../node_modules/stripe/lib/resources/Checkout/Sessions.js", "../../../../node_modules/stripe/lib/resources/Identity/VerificationReports.js", "../../../../node_modules/stripe/lib/resources/Identity/VerificationSessions.js", "../../../../node_modules/stripe/lib/resources/Issuing/Authorizations.js", "../../../../node_modules/stripe/lib/resources/Issuing/Cards.js", "../../../../node_modules/stripe/lib/resources/Issuing/Cardholders.js", "../../../../node_modules/stripe/lib/resources/Issuing/Disputes.js", "../../../../node_modules/stripe/lib/resources/Issuing/Transactions.js", "../../../../node_modules/stripe/lib/resources/Radar/EarlyFraudWarnings.js", "../../../../node_modules/stripe/lib/resources/Radar/ValueLists.js", "../../../../node_modules/stripe/lib/resources/Radar/ValueListItems.js", "../../../../node_modules/stripe/lib/resources/Reporting/ReportRuns.js", "../../../../node_modules/stripe/lib/resources/Reporting/ReportTypes.js", "../../../../node_modules/stripe/lib/resources/Sigma/ScheduledQueryRuns.js", "../../../../node_modules/stripe/lib/resources/Terminal/ConnectionTokens.js", "../../../../node_modules/stripe/lib/resources/Terminal/Locations.js", "../../../../node_modules/stripe/lib/resources/Terminal/Readers.js", "../../../../node_modules/stripe/lib/resources.js", "../../../../node_modules/stripe/lib/crypto/CryptoProvider.js", "../../../../node_modules/stripe/lib/crypto/NodeCryptoProvider.js", "../../../../node_modules/stripe/lib/Webhooks.js", "../../../../node_modules/stripe/lib/net/NodeHttpClient.js", "../../../../node_modules/stripe/lib/net/FetchHttpClient.js", "../../../../node_modules/stripe/lib/crypto/SubtleCryptoProvider.js", "../../../../node_modules/stripe/lib/stripe.js", "../../../../src/billing.js", "../../../../src/util/debug.js", "../../../../src/util/handler.js", "../../../../src/util/cost.js"],
  "sourcesContent": ["'use strict';\n\n// ResourceNamespace allows you to create nested resources, i.e. `stripe.issuing.cards`.\n// It also works recursively, so you could do i.e. `stripe.billing.invoicing.pay`.\n\nfunction ResourceNamespace(stripe, resources) {\n  for (const name in resources) {\n    const camelCaseName = name[0].toLowerCase() + name.substring(1);\n\n    const resource = new resources[name](stripe);\n\n    this[camelCaseName] = resource;\n  }\n}\n\nmodule.exports = function(namespace, resources) {\n  return function(stripe) {\n    return new ResourceNamespace(stripe, resources);\n  };\n};\n\nmodule.exports.ResourceNamespace = ResourceNamespace;\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = typeof key === 'object' && key.value !== undefined ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst qs = require('qs');\nconst crypto = require('crypto');\n\nconst hasOwn = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\n// Certain sandboxed environments (our known example right now are CloudFlare\n// Workers) may make `child_process` unavailable. Because `exec` isn't critical\n// to the operation of stripe-node, we handle this unavailability gracefully.\nlet exec = null;\ntry {\n  exec = require('child_process').exec;\n} catch (e) {\n  if (e.code !== 'MODULE_NOT_FOUND') {\n    throw e;\n  }\n}\n\nconst OPTIONS_KEYS = [\n  'apiKey',\n  'idempotencyKey',\n  'stripeAccount',\n  'apiVersion',\n  'maxNetworkRetries',\n  'timeout',\n  'host',\n];\n\nconst DEPRECATED_OPTIONS = {\n  api_key: 'apiKey',\n  idempotency_key: 'idempotencyKey',\n  stripe_account: 'stripeAccount',\n  stripe_version: 'apiVersion',\n  stripeVersion: 'apiVersion',\n};\nconst DEPRECATED_OPTIONS_KEYS = Object.keys(DEPRECATED_OPTIONS);\n\nconst utils = (module.exports = {\n  isOptionsHash(o) {\n    return (\n      o &&\n      typeof o === 'object' &&\n      (OPTIONS_KEYS.some((prop) => hasOwn(o, prop)) ||\n        DEPRECATED_OPTIONS_KEYS.some((prop) => hasOwn(o, prop)))\n    );\n  },\n\n  /**\n   * Stringifies an Object, accommodating nested objects\n   * (forming the conventional key 'parent[child]=value')\n   */\n  stringifyRequestData: (data) => {\n    return (\n      qs\n        .stringify(data, {\n          serializeDate: (d) => Math.floor(d.getTime() / 1000),\n        })\n        // Don't use strict form encoding by changing the square bracket control\n        // characters back to their literals. This is fine by the server, and\n        // makes these parameter strings easier to read.\n        .replace(/%5B/g, '[')\n        .replace(/%5D/g, ']')\n    );\n  },\n\n  /**\n   * Outputs a new function with interpolated object property values.\n   * Use like so:\n   *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n   *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n   */\n  makeURLInterpolator: (() => {\n    const rc = {\n      '\\n': '\\\\n',\n      '\"': '\\\\\"',\n      '\\u2028': '\\\\u2028',\n      '\\u2029': '\\\\u2029',\n    };\n    return (str) => {\n      const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, ($0) => rc[$0]);\n      return (outputs) => {\n        return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) =>\n          encodeURIComponent(outputs[$1] || '')\n        );\n      };\n    };\n  })(),\n\n  extractUrlParams: (path) => {\n    const params = path.match(/\\{\\w+\\}/g);\n    if (!params) {\n      return [];\n    }\n\n    return params.map((param) => param.replace(/[{}]/g, ''));\n  },\n\n  /**\n   * Return the data argument from a list of arguments\n   *\n   * @param {object[]} args\n   * @returns {object}\n   */\n  getDataFromArgs(args) {\n    if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n      return {};\n    }\n\n    if (!utils.isOptionsHash(args[0])) {\n      return args.shift();\n    }\n\n    const argKeys = Object.keys(args[0]);\n\n    const optionKeysInArgs = argKeys.filter((key) =>\n      OPTIONS_KEYS.includes(key)\n    );\n\n    // In some cases options may be the provided as the first argument.\n    // Here we're detecting a case where there are two distinct arguments\n    // (the first being args and the second options) and with known\n    // option keys in the first so that we can warn the user about it.\n    if (\n      optionKeysInArgs.length > 0 &&\n      optionKeysInArgs.length !== argKeys.length\n    ) {\n      emitWarning(\n        `Options found in arguments (${optionKeysInArgs.join(\n          ', '\n        )}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`\n      );\n    }\n\n    return {};\n  },\n\n  /**\n   * Return the options hash from a list of arguments\n   */\n  getOptionsFromArgs: (args) => {\n    const opts = {\n      auth: null,\n      headers: {},\n      settings: {},\n    };\n    if (args.length > 0) {\n      const arg = args[args.length - 1];\n      if (typeof arg === 'string') {\n        opts.auth = args.pop();\n      } else if (utils.isOptionsHash(arg)) {\n        const params = {...args.pop()};\n\n        const extraKeys = Object.keys(params).filter(\n          (key) => !OPTIONS_KEYS.includes(key)\n        );\n\n        if (extraKeys.length) {\n          const nonDeprecated = extraKeys.filter((key) => {\n            if (!DEPRECATED_OPTIONS[key]) {\n              return true;\n            }\n            const newParam = DEPRECATED_OPTIONS[key];\n            if (params[newParam]) {\n              throw Error(\n                `Both '${newParam}' and '${key}' were provided; please remove '${key}', which is deprecated.`\n              );\n            }\n            /**\n             * TODO turn this into a hard error in a future major version (once we have fixed our docs).\n             */\n            emitWarning(`'${key}' is deprecated; use '${newParam}' instead.`);\n            params[newParam] = params[key];\n          });\n          if (nonDeprecated.length) {\n            emitWarning(\n              `Invalid options found (${extraKeys.join(', ')}); ignoring.`\n            );\n          }\n        }\n\n        if (params.apiKey) {\n          opts.auth = params.apiKey;\n        }\n        if (params.idempotencyKey) {\n          opts.headers['Idempotency-Key'] = params.idempotencyKey;\n        }\n        if (params.stripeAccount) {\n          opts.headers['Stripe-Account'] = params.stripeAccount;\n        }\n        if (params.apiVersion) {\n          opts.headers['Stripe-Version'] = params.apiVersion;\n        }\n        if (Number.isInteger(params.maxNetworkRetries)) {\n          opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n        }\n        if (Number.isInteger(params.timeout)) {\n          opts.settings.timeout = params.timeout;\n        }\n        if (params.host) {\n          opts.host = params.host;\n        }\n      }\n    }\n    return opts;\n  },\n\n  /**\n   * Provide simple \"Class\" extension mechanism\n   */\n  protoExtend(sub) {\n    const Super = this;\n    const Constructor = hasOwn(sub, 'constructor')\n      ? sub.constructor\n      : function(...args) {\n          Super.apply(this, args);\n        };\n\n    // This initialization logic is somewhat sensitive to be compatible with\n    // divergent JS implementations like the one found in Qt. See here for more\n    // context:\n    //\n    // https://github.com/stripe/stripe-node/pull/334\n    Object.assign(Constructor, Super);\n    Constructor.prototype = Object.create(Super.prototype);\n    Object.assign(Constructor.prototype, sub);\n\n    return Constructor;\n  },\n\n  /**\n   * Secure compare, from https://github.com/freewil/scmp\n   */\n  secureCompare: (a, b) => {\n    a = Buffer.from(a);\n    b = Buffer.from(b);\n\n    // return early here if buffer lengths are not equal since timingSafeEqual\n    // will throw if buffer lengths are not equal\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    // use crypto.timingSafeEqual if available (since Node.js v6.6.0),\n    // otherwise use our own scmp-internal function.\n    if (crypto.timingSafeEqual) {\n      return crypto.timingSafeEqual(a, b);\n    }\n\n    const len = a.length;\n    let result = 0;\n\n    for (let i = 0; i < len; ++i) {\n      result |= a[i] ^ b[i];\n    }\n    return result === 0;\n  },\n\n  /**\n   * Remove empty values from an object\n   */\n  removeNullish: (obj) => {\n    if (typeof obj !== 'object') {\n      throw new Error('Argument must be an object');\n    }\n\n    return Object.keys(obj).reduce((result, key) => {\n      if (obj[key] != null) {\n        result[key] = obj[key];\n      }\n      return result;\n    }, {});\n  },\n\n  /**\n   * Normalize standard HTTP Headers:\n   * {'foo-bar': 'hi'}\n   * becomes\n   * {'Foo-Bar': 'hi'}\n   */\n  normalizeHeaders: (obj) => {\n    if (!(obj && typeof obj === 'object')) {\n      return obj;\n    }\n\n    return Object.keys(obj).reduce((result, header) => {\n      result[utils.normalizeHeader(header)] = obj[header];\n      return result;\n    }, {});\n  },\n\n  /**\n   * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n   * without the exceptions which are irrelevant to us.\n   */\n  normalizeHeader: (header) => {\n    return header\n      .split('-')\n      .map(\n        (text) => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase()\n      )\n      .join('-');\n  },\n\n  /**\n   * Determine if file data is a derivative of EventEmitter class.\n   * https://nodejs.org/api/events.html#events_events\n   */\n  checkForStream: (obj) => {\n    if (obj.file && obj.file.data) {\n      return obj.file.data instanceof EventEmitter;\n    }\n    return false;\n  },\n\n  callbackifyPromiseWithTimeout: (promise, callback) => {\n    if (callback) {\n      // Ensure callback is called outside of promise stack.\n      return promise.then(\n        (res) => {\n          setTimeout(() => {\n            callback(null, res);\n          }, 0);\n        },\n        (err) => {\n          setTimeout(() => {\n            callback(err, null);\n          }, 0);\n        }\n      );\n    }\n\n    return promise;\n  },\n\n  /**\n   * Allow for special capitalization cases (such as OAuth)\n   */\n  pascalToCamelCase: (name) => {\n    if (name === 'OAuth') {\n      return 'oauth';\n    } else {\n      return name[0].toLowerCase() + name.substring(1);\n    }\n  },\n\n  emitWarning,\n\n  /**\n   * Node's built in `exec` function sometimes throws outright,\n   * and sometimes has a callback with an error,\n   * depending on the type of error.\n   *\n   * This unifies that interface.\n   */\n  safeExec: (cmd, cb) => {\n    // Occurs if we couldn't load the `child_process` module, which might\n    // happen in certain sandboxed environments like a CloudFlare Worker.\n    if (utils._exec === null) {\n      cb(new Error('exec not available'), null);\n      return;\n    }\n\n    try {\n      utils._exec(cmd, cb);\n    } catch (e) {\n      cb(e, null);\n    }\n  },\n\n  // For mocking in tests.\n  _exec: exec,\n\n  isObject: (obj) => {\n    const type = typeof obj;\n    return (type === 'function' || type === 'object') && !!obj;\n  },\n\n  // For use in multipart requests\n  flattenAndStringify: (data) => {\n    const result = {};\n\n    const step = (obj, prevKey) => {\n      Object.keys(obj).forEach((key) => {\n        const value = obj[key];\n\n        const newKey = prevKey ? `${prevKey}[${key}]` : key;\n\n        if (utils.isObject(value)) {\n          if (!Buffer.isBuffer(value) && !value.hasOwnProperty('data')) {\n            // Non-buffer non-file Objects are recursively flattened\n            return step(value, newKey);\n          } else {\n            // Buffers and file objects are stored without modification\n            result[newKey] = value;\n          }\n        } else {\n          // Primitives are converted to strings\n          result[newKey] = String(value);\n        }\n      });\n    };\n\n    step(data);\n\n    return result;\n  },\n\n  /**\n   * https://stackoverflow.com/a/2117523\n   */\n  uuid4: () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  },\n\n  validateInteger: (name, n, defaultVal) => {\n    if (!Number.isInteger(n)) {\n      if (defaultVal !== undefined) {\n        return defaultVal;\n      } else {\n        throw new Error(`${name} must be an integer`);\n      }\n    }\n\n    return n;\n  },\n\n  determineProcessUserAgentProperties: () => {\n    return typeof process === 'undefined'\n      ? {}\n      : {\n          lang_version: process.version,\n          platform: process.platform,\n        };\n  },\n});\n\nfunction emitWarning(warning) {\n  if (typeof process.emitWarning !== 'function') {\n    return console.warn(\n      `Stripe: ${warning}`\n    ); /* eslint-disable-line no-console */\n  }\n\n  return process.emitWarning(warning, 'Stripe');\n}\n", "'use strict';\n\n/**\n * StripeError is the base error from which all other more specific Stripe errors derive.\n * Specifically for errors returned from Stripe's REST API.\n */\nclass StripeError extends Error {\n  constructor(raw = {}) {\n    super(raw.message);\n    this.type = this.constructor.name;\n\n    this.raw = raw;\n    this.rawType = raw.type;\n    this.code = raw.code;\n    this.doc_url = raw.doc_url;\n    this.param = raw.param;\n    this.detail = raw.detail;\n    this.headers = raw.headers;\n    this.requestId = raw.requestId;\n    this.statusCode = raw.statusCode;\n    this.message = raw.message;\n\n    this.charge = raw.charge;\n    this.decline_code = raw.decline_code;\n    this.payment_intent = raw.payment_intent;\n    this.payment_method = raw.payment_method;\n    this.payment_method_type = raw.payment_method_type;\n    this.setup_intent = raw.setup_intent;\n    this.source = raw.source;\n  }\n\n  /**\n   * Helper factory which takes raw stripe errors and outputs wrapping instances\n   */\n  static generate(rawStripeError) {\n    switch (rawStripeError.type) {\n      case 'card_error':\n        return new StripeCardError(rawStripeError);\n      case 'invalid_request_error':\n        return new StripeInvalidRequestError(rawStripeError);\n      case 'api_error':\n        return new StripeAPIError(rawStripeError);\n      case 'authentication_error':\n        return new StripeAuthenticationError(rawStripeError);\n      case 'rate_limit_error':\n        return new StripeRateLimitError(rawStripeError);\n      case 'idempotency_error':\n        return new StripeIdempotencyError(rawStripeError);\n      case 'invalid_grant':\n        return new StripeInvalidGrantError(rawStripeError);\n      default:\n        return new GenericError('Generic', 'Unknown Error');\n    }\n  }\n}\n\n// Specific Stripe Error types:\n\n/**\n * CardError is raised when a user enters a card that can't be charged for\n * some reason.\n */\nclass StripeCardError extends StripeError {}\n\n/**\n * InvalidRequestError is raised when a request is initiated with invalid\n * parameters.\n */\nclass StripeInvalidRequestError extends StripeError {}\n\n/**\n * APIError is a generic error that may be raised in cases where none of the\n * other named errors cover the problem. It could also be raised in the case\n * that a new error has been introduced in the API, but this version of the\n * Node.JS SDK doesn't know how to handle it.\n */\nclass StripeAPIError extends StripeError {}\n\n/**\n * AuthenticationError is raised when invalid credentials are used to connect\n * to Stripe's servers.\n */\nclass StripeAuthenticationError extends StripeError {}\n\n/**\n * PermissionError is raised in cases where access was attempted on a resource\n * that wasn't allowed.\n */\nclass StripePermissionError extends StripeError {}\n\n/**\n * RateLimitError is raised in cases where an account is putting too much load\n * on Stripe's API servers (usually by performing too many requests). Please\n * back off on request rate.\n */\nclass StripeRateLimitError extends StripeError {}\n\n/**\n * StripeConnectionError is raised in the event that the SDK can't connect to\n * Stripe's servers. That can be for a variety of different reasons from a\n * downed network to a bad TLS certificate.\n */\nclass StripeConnectionError extends StripeError {}\n\n/**\n * SignatureVerificationError is raised when the signature verification for a\n * webhook fails\n */\nclass StripeSignatureVerificationError extends StripeError {}\n\n/**\n * IdempotencyError is raised in cases where an idempotency key was used\n * improperly.\n */\nclass StripeIdempotencyError extends StripeError {}\n\n/**\n * InvalidGrantError is raised when a specified code doesn't exist, is\n * expired, has been used, or doesn't belong to you; a refresh token doesn't\n * exist, or doesn't belong to you; or if an API key's mode (live or test)\n * doesn't match the mode of a code or refresh token.\n */\nclass StripeInvalidGrantError extends StripeError {}\n\nmodule.exports.generate = StripeError.generate;\nmodule.exports.StripeError = StripeError;\nmodule.exports.StripeCardError = StripeCardError;\nmodule.exports.StripeInvalidRequestError = StripeInvalidRequestError;\nmodule.exports.StripeAPIError = StripeAPIError;\nmodule.exports.StripeAuthenticationError = StripeAuthenticationError;\nmodule.exports.StripePermissionError = StripePermissionError;\nmodule.exports.StripeRateLimitError = StripeRateLimitError;\nmodule.exports.StripeConnectionError = StripeConnectionError;\nmodule.exports.StripeSignatureVerificationError = StripeSignatureVerificationError;\nmodule.exports.StripeIdempotencyError = StripeIdempotencyError;\nmodule.exports.StripeInvalidGrantError = StripeInvalidGrantError;\n", "'use strict';\n\n/**\n * Encapsulates the logic for issuing a request to the Stripe API. This is an\n * experimental interface and is not yet stable.\n */\nclass HttpClient {\n  /** The client name used for diagnostics. */\n  getClientName() {\n    throw new Error('getClientName not implemented.');\n  }\n\n  makeRequest(\n    host,\n    port,\n    path,\n    method,\n    headers,\n    requestData,\n    protocol,\n    timeout\n  ) {\n    throw new Error('makeRequest not implemented.');\n  }\n\n  /** Helper to make a consistent timeout error across implementations. */\n  static makeTimeoutError() {\n    const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n    timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n    return timeoutErr;\n  }\n}\n\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\n\nclass HttpClientResponse {\n  constructor(statusCode, headers) {\n    this._statusCode = statusCode;\n    this._headers = headers;\n  }\n\n  getStatusCode() {\n    return this._statusCode;\n  }\n\n  getHeaders() {\n    return this._headers;\n  }\n\n  getRawResponse() {\n    throw new Error('getRawResponse not implemented.');\n  }\n\n  toStream(streamCompleteCallback) {\n    throw new Error('toStream not implemented.');\n  }\n\n  toJSON() {\n    throw new Error('toJSON not implemented.');\n  }\n}\n\nmodule.exports = {HttpClient, HttpClientResponse};\n", "'use strict';\n\nconst utils = require('./utils');\n\nfunction getRequestOpts(self, requestArgs, spec, overrideData) {\n  // Extract spec values with defaults.\n  const requestMethod = (spec.method || 'GET').toUpperCase();\n  const urlParams = spec.urlParams || [];\n  const encode = spec.encode || ((data) => data);\n\n  const isUsingFullPath = !!spec.fullPath;\n  const commandPath = utils.makeURLInterpolator(\n    isUsingFullPath ? spec.fullPath : spec.path || ''\n  );\n\n  // When using fullPath, we ignore the resource path as it should already be\n  // fully qualified.\n  const path = isUsingFullPath\n    ? spec.fullPath\n    : self.createResourcePathWithSymbols(spec.path);\n\n  // Don't mutate args externally.\n  const args = [].slice.call(requestArgs);\n\n  // Generate and validate url params.\n  const urlData = urlParams.reduce((urlData, param) => {\n    const arg = args.shift();\n    if (typeof arg !== 'string') {\n      throw new Error(\n        `Stripe: Argument \"${param}\" must be a string, but got: ${arg} (on API request to \\`${requestMethod} ${path}\\`)`\n      );\n    }\n\n    urlData[param] = arg;\n    return urlData;\n  }, {});\n\n  // Pull request data and options (headers, auth) from args.\n  const dataFromArgs = utils.getDataFromArgs(args);\n  const data = encode(Object.assign({}, dataFromArgs, overrideData));\n  const options = utils.getOptionsFromArgs(args);\n  const host = options.host || spec.host;\n  const streaming = !!spec.streaming;\n  // Validate that there are no more args.\n  if (args.filter((x) => x != null).length) {\n    throw new Error(\n      `Stripe: Unknown arguments (${args}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options. (on API request to ${requestMethod} \\`${path}\\`)`\n    );\n  }\n\n  // When using full path, we can just invoke the URL interpolator directly\n  // as we don't need to use the resource to create a full path.\n  const requestPath = isUsingFullPath\n    ? commandPath(urlData)\n    : self.createFullPath(commandPath, urlData);\n  const headers = Object.assign(options.headers, spec.headers);\n\n  if (spec.validator) {\n    spec.validator(data, {headers});\n  }\n\n  const dataInQuery = spec.method === 'GET' || spec.method === 'DELETE';\n  const bodyData = dataInQuery ? {} : data;\n  const queryData = dataInQuery ? data : {};\n\n  return {\n    requestMethod,\n    requestPath,\n    bodyData,\n    queryData,\n    auth: options.auth,\n    headers,\n    host,\n    streaming,\n    settings: options.settings,\n  };\n}\n\nfunction makeRequest(self, requestArgs, spec, overrideData) {\n  return new Promise((resolve, reject) => {\n    let opts;\n    try {\n      opts = getRequestOpts(self, requestArgs, spec, overrideData);\n    } catch (err) {\n      reject(err);\n      return;\n    }\n\n    function requestCallback(err, response) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(\n          spec.transformResponseData\n            ? spec.transformResponseData(response)\n            : response\n        );\n      }\n    }\n\n    const emptyQuery = Object.keys(opts.queryData).length === 0;\n    const path = [\n      opts.requestPath,\n      emptyQuery ? '' : '?',\n      utils.stringifyRequestData(opts.queryData),\n    ].join('');\n\n    const {headers, settings} = opts;\n\n    self._request(\n      opts.requestMethod,\n      opts.host,\n      path,\n      opts.bodyData,\n      opts.auth,\n      {headers, settings, streaming: opts.streaming},\n      requestCallback\n    );\n  });\n}\n\nmodule.exports = makeRequest;\n", "'use strict';\n\nconst makeRequest = require('./makeRequest');\nconst utils = require('./utils');\n\nfunction makeAutoPaginationMethods(self, requestArgs, spec, firstPagePromise) {\n  const promiseCache = {currentPromise: null};\n  const reverseIteration = isReverseIteration(requestArgs);\n  let pagePromise = firstPagePromise;\n  let i = 0;\n\n  // Search and List methods iterate differently.\n  // Search relies on a `next_page` token and can only iterate in one direction.\n  // List relies on either an `ending_before` or `starting_after` field with\n  // an item ID to paginate and is bi-directional.\n  //\n  // Please note: spec.methodType === 'search' is beta functionality and is\n  // subject to change/removal at any time.\n  let getNextPagePromise;\n  if (spec.methodType === 'search') {\n    getNextPagePromise = (pageResult) => {\n      if (!pageResult.next_page) {\n        throw Error(\n          'Unexpected: Stripe API response does not have a well-formed `next_page` field, but `has_more` was true.'\n        );\n      }\n      return makeRequest(self, requestArgs, spec, {\n        next_page: pageResult.next_page,\n      });\n    };\n  } else {\n    getNextPagePromise = (pageResult) => {\n      const lastId = getLastId(pageResult, reverseIteration);\n      return makeRequest(self, requestArgs, spec, {\n        [reverseIteration ? 'ending_before' : 'starting_after']: lastId,\n      });\n    };\n  }\n\n  function iterate(pageResult) {\n    if (\n      !(\n        pageResult &&\n        pageResult.data &&\n        typeof pageResult.data.length === 'number'\n      )\n    ) {\n      throw Error(\n        'Unexpected: Stripe API response does not have a well-formed `data` array.'\n      );\n    }\n\n    if (i < pageResult.data.length) {\n      const idx = reverseIteration ? pageResult.data.length - 1 - i : i;\n      const value = pageResult.data[idx];\n      i += 1;\n\n      return {value, done: false};\n    } else if (pageResult.has_more) {\n      // Reset counter, request next page, and recurse.\n      i = 0;\n      pagePromise = getNextPagePromise(pageResult);\n      return pagePromise.then(iterate);\n    }\n    return {value: undefined, done: true};\n  }\n\n  function asyncIteratorNext() {\n    return memoizedPromise(promiseCache, (resolve, reject) => {\n      return pagePromise\n        .then(iterate)\n        .then(resolve)\n        .catch(reject);\n    });\n  }\n\n  const autoPagingEach = makeAutoPagingEach(asyncIteratorNext);\n  const autoPagingToArray = makeAutoPagingToArray(autoPagingEach);\n\n  const autoPaginationMethods = {\n    autoPagingEach,\n    autoPagingToArray,\n\n    // Async iterator functions:\n    next: asyncIteratorNext,\n    return: () => {\n      // This is required for `break`.\n      return {};\n    },\n    [getAsyncIteratorSymbol()]: () => {\n      return autoPaginationMethods;\n    },\n  };\n  return autoPaginationMethods;\n}\n\nmodule.exports.makeAutoPaginationMethods = makeAutoPaginationMethods;\n\n/**\n * ----------------\n * Private Helpers:\n * ----------------\n */\n\nfunction getAsyncIteratorSymbol() {\n  if (typeof Symbol !== 'undefined' && Symbol.asyncIterator) {\n    return Symbol.asyncIterator;\n  }\n  // Follow the convention from libraries like iterall: https://github.com/leebyron/iterall#asynciterator-1\n  return '@@asyncIterator';\n}\n\nfunction getDoneCallback(args) {\n  if (args.length < 2) {\n    return undefined;\n  }\n  const onDone = args[1];\n  if (typeof onDone !== 'function') {\n    throw Error(\n      `The second argument to autoPagingEach, if present, must be a callback function; received ${typeof onDone}`\n    );\n  }\n  return onDone;\n}\n\n/**\n * We allow four forms of the `onItem` callback (the middle two being equivalent),\n *\n *   1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n *   2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n *   3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n *   4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n *\n * In addition to standard validation, this helper\n * coalesces the former forms into the latter form.\n */\nfunction getItemCallback(args) {\n  if (args.length === 0) {\n    return undefined;\n  }\n  const onItem = args[0];\n  if (typeof onItem !== 'function') {\n    throw Error(\n      `The first argument to autoPagingEach, if present, must be a callback function; received ${typeof onItem}`\n    );\n  }\n\n  // 4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n  if (onItem.length === 2) {\n    return onItem;\n  }\n\n  if (onItem.length > 2) {\n    throw Error(\n      `The \\`onItem\\` callback function passed to autoPagingEach must accept at most two arguments; got ${onItem}`\n    );\n  }\n\n  // This magically handles all three of these usecases (the latter two being functionally identical):\n  // 1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n  // 2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n  // 3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n  return function _onItem(item, next) {\n    const shouldContinue = onItem(item);\n    next(shouldContinue);\n  };\n}\n\nfunction getLastId(listResult, reverseIteration) {\n  const lastIdx = reverseIteration ? 0 : listResult.data.length - 1;\n  const lastItem = listResult.data[lastIdx];\n  const lastId = lastItem && lastItem.id;\n  if (!lastId) {\n    throw Error(\n      'Unexpected: No `id` found on the last item while auto-paging a list.'\n    );\n  }\n  return lastId;\n}\n\n/**\n * If a user calls `.next()` multiple times in parallel,\n * return the same result until something has resolved\n * to prevent page-turning race conditions.\n */\nfunction memoizedPromise(promiseCache, cb) {\n  if (promiseCache.currentPromise) {\n    return promiseCache.currentPromise;\n  }\n  promiseCache.currentPromise = new Promise(cb).then((ret) => {\n    promiseCache.currentPromise = undefined;\n    return ret;\n  });\n  return promiseCache.currentPromise;\n}\n\nfunction makeAutoPagingEach(asyncIteratorNext) {\n  return function autoPagingEach(/* onItem?, onDone? */) {\n    const args = [].slice.call(arguments);\n    const onItem = getItemCallback(args);\n    const onDone = getDoneCallback(args);\n    if (args.length > 2) {\n      throw Error(`autoPagingEach takes up to two arguments; received ${args}`);\n    }\n\n    const autoPagePromise = wrapAsyncIteratorWithCallback(\n      asyncIteratorNext,\n      onItem\n    );\n    return utils.callbackifyPromiseWithTimeout(autoPagePromise, onDone);\n  };\n}\n\nfunction makeAutoPagingToArray(autoPagingEach) {\n  return function autoPagingToArray(opts, onDone) {\n    const limit = opts && opts.limit;\n    if (!limit) {\n      throw Error(\n        'You must pass a `limit` option to autoPagingToArray, e.g., `autoPagingToArray({limit: 1000});`.'\n      );\n    }\n    if (limit > 10000) {\n      throw Error(\n        'You cannot specify a limit of more than 10,000 items to fetch in `autoPagingToArray`; use `autoPagingEach` to iterate through longer lists.'\n      );\n    }\n    const promise = new Promise((resolve, reject) => {\n      const items = [];\n      autoPagingEach((item) => {\n        items.push(item);\n        if (items.length >= limit) {\n          return false;\n        }\n      })\n        .then(() => {\n          resolve(items);\n        })\n        .catch(reject);\n    });\n    return utils.callbackifyPromiseWithTimeout(promise, onDone);\n  };\n}\n\nfunction wrapAsyncIteratorWithCallback(asyncIteratorNext, onItem) {\n  return new Promise((resolve, reject) => {\n    function handleIteration(iterResult) {\n      if (iterResult.done) {\n        resolve();\n        return;\n      }\n\n      const item = iterResult.value;\n      return new Promise((next) => {\n        // Bit confusing, perhaps; we pass a `resolve` fn\n        // to the user, so they can decide when and if to continue.\n        // They can return false, or a promise which resolves to false, to break.\n        onItem(item, next);\n      }).then((shouldContinue) => {\n        if (shouldContinue === false) {\n          return handleIteration({done: true});\n        } else {\n          return asyncIteratorNext().then(handleIteration);\n        }\n      });\n    }\n\n    asyncIteratorNext()\n      .then(handleIteration)\n      .catch(reject);\n  });\n}\n\nfunction isReverseIteration(requestArgs) {\n  const args = [].slice.call(requestArgs);\n  const dataFromArgs = utils.getDataFromArgs(args);\n\n  return !!dataFromArgs.ending_before;\n}\n", "'use strict';\n\nconst utils = require('./utils');\nconst makeRequest = require('./makeRequest');\nconst makeAutoPaginationMethods = require('./autoPagination')\n  .makeAutoPaginationMethods;\n\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.fullPath=''] Fully qualified path to the method (eg. /v1/a/b/c).\n *  If this is specified, path should not be specified.\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n */\nfunction stripeMethod(spec) {\n  if (spec.path !== undefined && spec.fullPath !== undefined) {\n    throw new Error(\n      `Method spec specified both a 'path' (${spec.path}) and a 'fullPath' (${spec.fullPath}).`\n    );\n  }\n  return function(...args) {\n    const callback = typeof args[args.length - 1] == 'function' && args.pop();\n\n    spec.urlParams = utils.extractUrlParams(\n      spec.fullPath || this.createResourcePathWithSymbols(spec.path || '')\n    );\n\n    const requestPromise = utils.callbackifyPromiseWithTimeout(\n      makeRequest(this, args, spec, {}),\n      callback\n    );\n\n    // Please note `spec.methodType === 'search'` is beta functionality and this\n    // interface is subject to change/removal at any time.\n    if (spec.methodType === 'list' || spec.methodType === 'search') {\n      const autoPaginationMethods = makeAutoPaginationMethods(\n        this,\n        args,\n        spec,\n        requestPromise\n      );\n      Object.assign(requestPromise, autoPaginationMethods);\n    }\n\n    return requestPromise;\n  };\n}\n\nmodule.exports = stripeMethod;\n", "'use strict';\n\nconst stripeMethod = require('./StripeMethod');\n\n// DEPRECATED: These were kept for backwards compatibility in case users were\n// using this, but basic methods are now explicitly defined on a resource.\nmodule.exports = {\n  create: stripeMethod({\n    method: 'POST',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    methodType: 'list',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '{id}',\n  }),\n\n  // Avoid 'delete' keyword in JS\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '{id}',\n  }),\n};\n", "'use strict';\n\nconst path = require('path');\n\nconst utils = require('./utils');\nconst {\n  StripeConnectionError,\n  StripeAuthenticationError,\n  StripePermissionError,\n  StripeRateLimitError,\n  StripeError,\n  StripeAPIError,\n} = require('./Error');\n\nconst {HttpClient} = require('./net/HttpClient');\n\n// Provide extension mechanism for Stripe Resource Sub-Classes\nStripeResource.extend = utils.protoExtend;\n\n// Expose method-creator & prepared (basic) methods\nStripeResource.method = require('./StripeMethod');\nStripeResource.BASIC_METHODS = require('./StripeMethod.basic');\n\nStripeResource.MAX_BUFFERED_REQUEST_METRICS = 100;\nconst MAX_RETRY_AFTER_WAIT = 60;\n\n/**\n * Encapsulates request logic for a Stripe Resource\n */\nfunction StripeResource(stripe, deprecatedUrlData) {\n  this._stripe = stripe;\n  if (deprecatedUrlData) {\n    throw new Error(\n      'Support for curried url params was dropped in stripe-node v7.0.0. Instead, pass two ids.'\n    );\n  }\n\n  this.basePath = utils.makeURLInterpolator(\n    this.basePath || stripe.getApiField('basePath')\n  );\n  this.resourcePath = this.path;\n  this.path = utils.makeURLInterpolator(this.path);\n\n  // DEPRECATED: This was kept for backwards compatibility in case users were\n  // using this, but basic methods are now explicitly defined on a resource.\n  if (this.includeBasic) {\n    this.includeBasic.forEach(function(methodName) {\n      this[methodName] = StripeResource.BASIC_METHODS[methodName];\n    }, this);\n  }\n\n  this.initialize(...arguments);\n}\n\nStripeResource.prototype = {\n  path: '',\n\n  // Methods that don't use the API's default '/v1' path can override it with this setting.\n  basePath: null,\n\n  initialize() {},\n\n  // Function to override the default data processor. This allows full control\n  // over how a StripeResource's request data will get converted into an HTTP\n  // body. This is useful for non-standard HTTP requests. The function should\n  // take method name, data, and headers as arguments.\n  requestDataProcessor: null,\n\n  // Function to add a validation checks before sending the request, errors should\n  // be thrown, and they will be passed to the callback/promise.\n  validateRequest: null,\n\n  createFullPath(commandPath, urlData) {\n    return path\n      .join(\n        this.basePath(urlData),\n        this.path(urlData),\n        typeof commandPath == 'function' ? commandPath(urlData) : commandPath\n      )\n      .replace(/\\\\/g, '/'); // ugly workaround for Windows\n  },\n\n  // Creates a relative resource path with symbols left in (unlike\n  // createFullPath which takes some data to replace them with). For example it\n  // might produce: /invoices/{id}\n  createResourcePathWithSymbols(pathWithSymbols) {\n    return `/${path\n      .join(this.resourcePath, pathWithSymbols || '')\n      .replace(/\\\\/g, '/')}`; // ugly workaround for Windows\n  },\n\n  // DEPRECATED: Here for backcompat in case users relied on this.\n  wrapTimeout: utils.callbackifyPromiseWithTimeout,\n\n  _timeoutHandler(timeout, req, callback) {\n    return () => {\n      const timeoutErr = new TypeError('ETIMEDOUT');\n      timeoutErr.code = 'ETIMEDOUT';\n\n      req.destroy(timeoutErr);\n    };\n  },\n\n  _addHeadersDirectlyToObject(obj, headers) {\n    // For convenience, make some headers easily accessible on\n    // lastResponse.\n\n    // NOTE: Stripe responds with lowercase header names/keys.\n    obj.requestId = headers['request-id'];\n    obj.stripeAccount = obj.stripeAccount || headers['stripe-account'];\n    obj.apiVersion = obj.apiVersion || headers['stripe-version'];\n    obj.idempotencyKey = obj.idempotencyKey || headers['idempotency-key'];\n  },\n\n  _makeResponseEvent(requestEvent, statusCode, headers) {\n    const requestEndTime = Date.now();\n    const requestDurationMs = requestEndTime - requestEvent.request_start_time;\n\n    return utils.removeNullish({\n      api_version: headers['stripe-version'],\n      account: headers['stripe-account'],\n      idempotency_key: headers['idempotency-key'],\n      method: requestEvent.method,\n      path: requestEvent.path,\n      status: statusCode,\n      request_id: this._getRequestId(headers),\n      elapsed: requestDurationMs,\n      request_start_time: requestEvent.request_start_time,\n      request_end_time: requestEndTime,\n    });\n  },\n\n  _getRequestId(headers) {\n    return headers['request-id'];\n  },\n\n  /**\n   * Used by methods with spec.streaming === true. For these methods, we do not\n   * buffer successful responses into memory or do parse them into stripe\n   * objects, we delegate that all of that to the user and pass back the raw\n   * http.Response object to the callback.\n   *\n   * (Unsuccessful responses shouldn't make it here, they should\n   * still be buffered/parsed and handled by _jsonResponseHandler -- see\n   * makeRequest)\n   */\n  _streamingResponseHandler(requestEvent, callback) {\n    return (res) => {\n      const headers = res.getHeaders();\n\n      const streamCompleteCallback = () => {\n        const responseEvent = this._makeResponseEvent(\n          requestEvent,\n          res.getStatusCode(),\n          headers\n        );\n        this._stripe._emitter.emit('response', responseEvent);\n        this._recordRequestMetrics(\n          this._getRequestId(headers),\n          responseEvent.elapsed\n        );\n      };\n\n      const stream = res.toStream(streamCompleteCallback);\n\n      // This is here for backwards compatibility, as the stream is a raw\n      // HTTP response in Node and the legacy behavior was to mutate this\n      // response.\n      this._addHeadersDirectlyToObject(stream, headers);\n\n      return callback(null, stream);\n    };\n  },\n\n  /**\n   * Default handler for Stripe responses. Buffers the response into memory,\n   * parses the JSON and returns it (i.e. passes it to the callback) if there\n   * is no \"error\" field. Otherwise constructs/passes an appropriate Error.\n   */\n  _jsonResponseHandler(requestEvent, callback) {\n    return (res) => {\n      const headers = res.getHeaders();\n      const requestId = this._getRequestId(headers);\n      const statusCode = res.getStatusCode();\n\n      const responseEvent = this._makeResponseEvent(\n        requestEvent,\n        statusCode,\n        headers\n      );\n      this._stripe._emitter.emit('response', responseEvent);\n\n      res\n        .toJSON()\n        .then(\n          (jsonResponse) => {\n            if (jsonResponse.error) {\n              let err;\n\n              // Convert OAuth error responses into a standard format\n              // so that the rest of the error logic can be shared\n              if (typeof jsonResponse.error === 'string') {\n                jsonResponse.error = {\n                  type: jsonResponse.error,\n                  message: jsonResponse.error_description,\n                };\n              }\n\n              jsonResponse.error.headers = headers;\n              jsonResponse.error.statusCode = statusCode;\n              jsonResponse.error.requestId = requestId;\n\n              if (statusCode === 401) {\n                err = new StripeAuthenticationError(jsonResponse.error);\n              } else if (statusCode === 403) {\n                err = new StripePermissionError(jsonResponse.error);\n              } else if (statusCode === 429) {\n                err = new StripeRateLimitError(jsonResponse.error);\n              } else {\n                err = StripeError.generate(jsonResponse.error);\n              }\n\n              throw err;\n            }\n\n            return jsonResponse;\n          },\n          (e) => {\n            throw new StripeAPIError({\n              message: 'Invalid JSON received from the Stripe API',\n              exception: e,\n              requestId: headers['request-id'],\n            });\n          }\n        )\n        .then(\n          (jsonResponse) => {\n            this._recordRequestMetrics(requestId, responseEvent.elapsed);\n\n            // Expose raw response object.\n            const rawResponse = res.getRawResponse();\n            this._addHeadersDirectlyToObject(rawResponse, headers);\n            Object.defineProperty(jsonResponse, 'lastResponse', {\n              enumerable: false,\n              writable: false,\n              value: rawResponse,\n            });\n\n            callback.call(this, null, jsonResponse);\n          },\n          (e) => callback.call(this, e, null)\n        );\n    };\n  },\n\n  _generateConnectionErrorMessage(requestRetries) {\n    return `An error occurred with our connection to Stripe.${\n      requestRetries > 0 ? ` Request was retried ${requestRetries} times.` : ''\n    }`;\n  },\n\n  _errorHandler(req, requestRetries, callback) {\n    return (message, detail) => {\n      callback.call(\n        this,\n        new StripeConnectionError({\n          message: this._generateConnectionErrorMessage(requestRetries),\n          detail: error,\n        }),\n        null\n      );\n    };\n  },\n\n  // For more on when and how to retry API requests, see https://stripe.com/docs/error-handling#safely-retrying-requests-with-idempotency\n  _shouldRetry(res, numRetries, maxRetries) {\n    // Do not retry if we are out of retries.\n    if (numRetries >= maxRetries) {\n      return false;\n    }\n\n    // Retry on connection error.\n    if (!res) {\n      return true;\n    }\n\n    // The API may ask us not to retry (e.g., if doing so would be a no-op)\n    // or advise us to retry (e.g., in cases of lock timeouts); we defer to that.\n    if (res.getHeaders()['stripe-should-retry'] === 'false') {\n      return false;\n    }\n    if (res.getHeaders()['stripe-should-retry'] === 'true') {\n      return true;\n    }\n\n    // Retry on conflict errors.\n    if (res.getStatusCode() === 409) {\n      return true;\n    }\n\n    // Retry on 500, 503, and other internal errors.\n    //\n    // Note that we expect the stripe-should-retry header to be false\n    // in most cases when a 500 is returned, since our idempotency framework\n    // would typically replay it anyway.\n    if (res.getStatusCode() >= 500) {\n      return true;\n    }\n\n    return false;\n  },\n\n  _getSleepTimeInMS(numRetries, retryAfter = null) {\n    const initialNetworkRetryDelay = this._stripe.getInitialNetworkRetryDelay();\n    const maxNetworkRetryDelay = this._stripe.getMaxNetworkRetryDelay();\n\n    // Apply exponential backoff with initialNetworkRetryDelay on the\n    // number of numRetries so far as inputs. Do not allow the number to exceed\n    // maxNetworkRetryDelay.\n    let sleepSeconds = Math.min(\n      initialNetworkRetryDelay * Math.pow(numRetries - 1, 2),\n      maxNetworkRetryDelay\n    );\n\n    // Apply some jitter by randomizing the value in the range of\n    // (sleepSeconds / 2) to (sleepSeconds).\n    sleepSeconds *= 0.5 * (1 + Math.random());\n\n    // But never sleep less than the base sleep seconds.\n    sleepSeconds = Math.max(initialNetworkRetryDelay, sleepSeconds);\n\n    // And never sleep less than the time the API asks us to wait, assuming it's a reasonable ask.\n    if (Number.isInteger(retryAfter) && retryAfter <= MAX_RETRY_AFTER_WAIT) {\n      sleepSeconds = Math.max(sleepSeconds, retryAfter);\n    }\n\n    return sleepSeconds * 1000;\n  },\n\n  // Max retries can be set on a per request basis. Favor those over the global setting\n  _getMaxNetworkRetries(settings = {}) {\n    return settings.maxNetworkRetries &&\n      Number.isInteger(settings.maxNetworkRetries)\n      ? settings.maxNetworkRetries\n      : this._stripe.getMaxNetworkRetries();\n  },\n\n  _defaultIdempotencyKey(method, settings) {\n    // If this is a POST and we allow multiple retries, ensure an idempotency key.\n    const maxRetries = this._getMaxNetworkRetries(settings);\n\n    if (method === 'POST' && maxRetries > 0) {\n      return `stripe-node-retry-${utils.uuid4()}`;\n    }\n    return null;\n  },\n\n  _makeHeaders(\n    auth,\n    contentLength,\n    apiVersion,\n    clientUserAgent,\n    method,\n    userSuppliedHeaders,\n    userSuppliedSettings\n  ) {\n    const defaultHeaders = {\n      // Use specified auth token or use default from this stripe instance:\n      Authorization: auth ? `Bearer ${auth}` : this._stripe.getApiField('auth'),\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Content-Length': contentLength,\n      'User-Agent': this._getUserAgentString(),\n      'X-Stripe-Client-User-Agent': clientUserAgent,\n      'X-Stripe-Client-Telemetry': this._getTelemetryHeader(),\n      'Stripe-Version': apiVersion,\n      'Stripe-Account': this._stripe.getApiField('stripeAccount'),\n      'Idempotency-Key': this._defaultIdempotencyKey(\n        method,\n        userSuppliedSettings\n      ),\n    };\n\n    return Object.assign(\n      utils.removeNullish(defaultHeaders),\n      // If the user supplied, say 'idempotency-key', override instead of appending by ensuring caps are the same.\n      utils.normalizeHeaders(userSuppliedHeaders)\n    );\n  },\n\n  _getUserAgentString() {\n    const packageVersion = this._stripe.getConstant('PACKAGE_VERSION');\n    const appInfo = this._stripe._appInfo\n      ? this._stripe.getAppInfoAsString()\n      : '';\n\n    return `Stripe/v1 NodeBindings/${packageVersion} ${appInfo}`.trim();\n  },\n\n  _getTelemetryHeader() {\n    if (\n      this._stripe.getTelemetryEnabled() &&\n      this._stripe._prevRequestMetrics.length > 0\n    ) {\n      const metrics = this._stripe._prevRequestMetrics.shift();\n      return JSON.stringify({\n        last_request_metrics: metrics,\n      });\n    }\n  },\n\n  _recordRequestMetrics(requestId, requestDurationMs) {\n    if (this._stripe.getTelemetryEnabled() && requestId) {\n      if (\n        this._stripe._prevRequestMetrics.length >\n        StripeResource.MAX_BUFFERED_REQUEST_METRICS\n      ) {\n        utils.emitWarning(\n          'Request metrics buffer is full, dropping telemetry message.'\n        );\n      } else {\n        this._stripe._prevRequestMetrics.push({\n          request_id: requestId,\n          request_duration_ms: requestDurationMs,\n        });\n      }\n    }\n  },\n\n  _request(method, host, path, data, auth, options = {}, callback) {\n    let requestData;\n\n    const retryRequest = (\n      requestFn,\n      apiVersion,\n      headers,\n      requestRetries,\n      retryAfter\n    ) => {\n      return setTimeout(\n        requestFn,\n        this._getSleepTimeInMS(requestRetries, retryAfter),\n        apiVersion,\n        headers,\n        requestRetries + 1\n      );\n    };\n\n    const makeRequest = (apiVersion, headers, numRetries) => {\n      // timeout can be set on a per-request basis. Favor that over the global setting\n      const timeout =\n        options.settings &&\n        Number.isInteger(options.settings.timeout) &&\n        options.settings.timeout >= 0\n          ? options.settings.timeout\n          : this._stripe.getApiField('timeout');\n\n      const req = this._stripe\n        .getApiField('httpClient')\n        .makeRequest(\n          host || this._stripe.getApiField('host'),\n          this._stripe.getApiField('port'),\n          path,\n          method,\n          headers,\n          requestData,\n          this._stripe.getApiField('protocol'),\n          timeout\n        );\n\n      const requestStartTime = Date.now();\n\n      const requestEvent = utils.removeNullish({\n        api_version: apiVersion,\n        account: headers['Stripe-Account'],\n        idempotency_key: headers['Idempotency-Key'],\n        method,\n        path,\n        request_start_time: requestStartTime,\n      });\n\n      const requestRetries = numRetries || 0;\n\n      const maxRetries = this._getMaxNetworkRetries(options.settings);\n\n      this._stripe._emitter.emit('request', requestEvent);\n\n      req\n        .then((res) => {\n          if (this._shouldRetry(res, requestRetries, maxRetries)) {\n            return retryRequest(\n              makeRequest,\n              apiVersion,\n              headers,\n              requestRetries,\n              res.getHeaders()['retry-after']\n            );\n          } else if (options.streaming && res.getStatusCode() < 400) {\n            return this._streamingResponseHandler(requestEvent, callback)(res);\n          } else {\n            return this._jsonResponseHandler(requestEvent, callback)(res);\n          }\n        })\n        .catch((error) => {\n          if (this._shouldRetry(null, requestRetries, maxRetries)) {\n            return retryRequest(\n              makeRequest,\n              apiVersion,\n              headers,\n              requestRetries,\n              null\n            );\n          } else {\n            const isTimeoutError =\n              error.code && error.code === HttpClient.TIMEOUT_ERROR_CODE;\n\n            return callback.call(\n              this,\n              new StripeConnectionError({\n                message: isTimeoutError\n                  ? `Request aborted due to timeout being reached (${timeout}ms)`\n                  : this._generateConnectionErrorMessage(requestRetries),\n                detail: error,\n              })\n            );\n          }\n        });\n    };\n\n    const prepareAndMakeRequest = (error, data) => {\n      if (error) {\n        return callback(error);\n      }\n\n      requestData = data;\n\n      this._stripe.getClientUserAgent((clientUserAgent) => {\n        const apiVersion = this._stripe.getApiField('version');\n        const headers = this._makeHeaders(\n          auth,\n          requestData.length,\n          apiVersion,\n          clientUserAgent,\n          method,\n          options.headers,\n          options.settings\n        );\n\n        makeRequest(apiVersion, headers);\n      });\n    };\n\n    if (this.requestDataProcessor) {\n      this.requestDataProcessor(\n        method,\n        data,\n        options.headers,\n        prepareAndMakeRequest\n      );\n    } else {\n      prepareAndMakeRequest(null, utils.stringifyRequestData(data || {}));\n    }\n  },\n};\n\nmodule.exports = StripeResource;\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\n// Since path can either be `account` or `accounts`, support both through stripeMethod path;\nmodule.exports = StripeResource.extend({\n  path: '',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: 'accounts',\n  }),\n\n  retrieve(id) {\n    // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n    // old account ids and api keys. To request the account for an api key, send null as the id\n    if (typeof id === 'string') {\n      return stripeMethod({\n        method: 'GET',\n        path: 'accounts/{id}',\n      }).apply(this, arguments);\n    } else {\n      if (id === null || id === undefined) {\n        // Remove id as stripeMethod would complain of unexpected argument\n        [].shift.apply(arguments);\n      }\n      return stripeMethod({\n        method: 'GET',\n        path: 'account',\n      }).apply(this, arguments);\n    }\n  },\n\n  update: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: 'accounts',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{account}',\n  }),\n\n  reject: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/reject',\n  }),\n\n  retrieveCapability: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/capabilities/{capability}',\n  }),\n\n  updateCapability: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/capabilities/{capability}',\n  }),\n\n  listCapabilities: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/capabilities',\n    methodType: 'list',\n  }),\n\n  createExternalAccount: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/external_accounts',\n  }),\n\n  retrieveExternalAccount: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/external_accounts/{id}',\n  }),\n\n  updateExternalAccount: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/external_accounts/{id}',\n  }),\n\n  listExternalAccounts: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/external_accounts',\n    methodType: 'list',\n  }),\n\n  deleteExternalAccount: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{account}/external_accounts/{id}',\n  }),\n\n  createLoginLink: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/login_links',\n  }),\n\n  createPerson: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/persons',\n  }),\n\n  retrievePerson: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/persons/{person}',\n  }),\n\n  updatePerson: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/persons/{person}',\n  }),\n\n  listPersons: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/persons',\n    methodType: 'list',\n  }),\n\n  deletePerson: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{account}/persons/{person}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'account_links',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'apple_pay/domains',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{domain}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{domain}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'application_fees',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  createRefund: stripeMethod({\n    method: 'POST',\n    path: '/{id}/refunds',\n  }),\n\n  retrieveRefund: stripeMethod({\n    method: 'GET',\n    path: '/{fee}/refunds/{id}',\n  }),\n\n  updateRefund: stripeMethod({\n    method: 'POST',\n    path: '/{fee}/refunds/{id}',\n  }),\n\n  listRefunds: stripeMethod({\n    method: 'GET',\n    path: '/{id}/refunds',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'balance',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'balance_transactions',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'charges',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{charge}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{charge}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  capture: stripeMethod({\n    method: 'POST',\n    path: '/{charge}/capture',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'country_specs',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{country}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'coupons',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{coupon}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{coupon}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{coupon}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'credit_notes',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{id}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  preview: stripeMethod({\n    method: 'GET',\n    path: '/preview',\n  }),\n\n  voidCreditNote: stripeMethod({\n    method: 'POST',\n    path: '/{id}/void',\n  }),\n\n  listLineItems: stripeMethod({\n    method: 'GET',\n    path: '/{creditNote}/lines',\n    methodType: 'list',\n  }),\n\n  listPreviewLineItems: stripeMethod({\n    method: 'GET',\n    path: '/preview/lines',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'customers',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{customer}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{customer}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}',\n  }),\n\n  deleteDiscount: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/discount',\n  }),\n\n  listPaymentMethods: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/payment_methods',\n    methodType: 'list',\n  }),\n\n  createBalanceTransaction: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/balance_transactions',\n  }),\n\n  retrieveBalanceTransaction: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/balance_transactions/{transaction}',\n  }),\n\n  updateBalanceTransaction: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/balance_transactions/{transaction}',\n  }),\n\n  listBalanceTransactions: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/balance_transactions',\n    methodType: 'list',\n  }),\n\n  createSource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources',\n  }),\n\n  retrieveSource: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/sources/{id}',\n  }),\n\n  updateSource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources/{id}',\n  }),\n\n  listSources: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/sources',\n    methodType: 'list',\n  }),\n\n  deleteSource: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/sources/{id}',\n  }),\n\n  verifySource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources/{id}/verify',\n  }),\n\n  createTaxId: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/tax_ids',\n  }),\n\n  retrieveTaxId: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/tax_ids/{id}',\n  }),\n\n  listTaxIds: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/tax_ids',\n    methodType: 'list',\n  }),\n\n  deleteTaxId: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/tax_ids/{id}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'disputes',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{dispute}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{dispute}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  close: stripeMethod({\n    method: 'POST',\n    path: '/{dispute}/close',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'ephemeral_keys',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n    validator: (data, options) => {\n      if (!options.headers || !options.headers['Stripe-Version']) {\n        throw new Error(\n          'Passing apiVersion in a separate options hash is required to create an ephemeral key. See https://stripe.com/docs/api/versioning?lang=node'\n        );\n      }\n    },\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{key}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'events',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'exchange_rates',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{rateId}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "'use strict';\n\nconst utils = require('./utils');\nconst {StripeError} = require('./Error');\n\nclass StreamProcessingError extends StripeError {}\n\n// Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\nconst multipartDataGenerator = (method, data, headers) => {\n  const segno = (\n    Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)\n  ).toString();\n  headers['Content-Type'] = `multipart/form-data; boundary=${segno}`;\n  let buffer = Buffer.alloc(0);\n\n  function push(l) {\n    const prevBuffer = buffer;\n    const newBuffer = l instanceof Buffer ? l : Buffer.from(l);\n    buffer = Buffer.alloc(prevBuffer.length + newBuffer.length + 2);\n    prevBuffer.copy(buffer);\n    newBuffer.copy(buffer, prevBuffer.length);\n    buffer.write('\\r\\n', buffer.length - 2);\n  }\n\n  function q(s) {\n    return `\"${s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ')}\"`;\n  }\n\n  const flattenedData = utils.flattenAndStringify(data);\n\n  for (const k in flattenedData) {\n    const v = flattenedData[k];\n    push(`--${segno}`);\n    if (v.hasOwnProperty('data')) {\n      push(\n        `Content-Disposition: form-data; name=${q(k)}; filename=${q(\n          v.name || 'blob'\n        )}`\n      );\n      push(`Content-Type: ${v.type || 'application/octet-stream'}`);\n      push('');\n      push(v.data);\n    } else {\n      push(`Content-Disposition: form-data; name=${q(k)}`);\n      push('');\n      push(v);\n    }\n  }\n  push(`--${segno}--`);\n\n  return buffer;\n};\n\nconst streamProcessor = (method, data, headers, callback) => {\n  const bufferArray = [];\n  data.file.data\n    .on('data', (line) => {\n      bufferArray.push(line);\n    })\n    .once('end', () => {\n      const bufferData = Object.assign({}, data);\n      bufferData.file.data = Buffer.concat(bufferArray);\n      const buffer = multipartDataGenerator(method, bufferData, headers);\n      callback(null, buffer);\n    })\n    .on('error', (err) => {\n      callback(\n        new StreamProcessingError({\n          message:\n            'An error occurred while attempting to process the file for upload.',\n          detail: err,\n        }),\n        null\n      );\n    });\n};\n\nconst multipartRequestDataProcessor = (method, data, headers, callback) => {\n  data = data || {};\n\n  if (method !== 'POST') {\n    return callback(null, utils.stringifyRequestData(data));\n  }\n\n  const isStream = utils.checkForStream(data);\n  if (isStream) {\n    return streamProcessor(method, data, headers, callback);\n  }\n\n  const buffer = multipartDataGenerator(method, data, headers);\n  return callback(null, buffer);\n};\n\nmodule.exports.multipartRequestDataProcessor = multipartRequestDataProcessor;\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst {multipartRequestDataProcessor} = require('../multipart');\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'files',\n\n  create: stripeMethod({\n    method: 'POST',\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    host: 'files.stripe.com',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{file}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  requestDataProcessor: multipartRequestDataProcessor,\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'file_links',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{link}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{link}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'invoices',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{invoice}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{invoice}',\n  }),\n\n  finalizeInvoice: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}/finalize',\n  }),\n\n  markUncollectible: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}/mark_uncollectible',\n  }),\n\n  pay: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}/pay',\n  }),\n\n  retrieveUpcoming: stripeMethod({\n    method: 'GET',\n    path: '/upcoming',\n  }),\n\n  sendInvoice: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}/send',\n  }),\n\n  voidInvoice: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}/void',\n  }),\n\n  listLineItems: stripeMethod({\n    method: 'GET',\n    path: '/{invoice}/lines',\n    methodType: 'list',\n  }),\n\n  listUpcomingLineItems: stripeMethod({\n    method: 'GET',\n    path: '/upcoming/lines',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'invoiceitems',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{invoiceitem}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{invoiceitem}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{invoiceitem}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'issuer_fraud_records',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{issuerFraudRecord}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'mandates',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{mandate}',\n  }),\n});\n", "'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\nconst utils = require('../utils');\n\nconst oAuthHost = 'connect.stripe.com';\n\nmodule.exports = StripeResource.extend({\n  basePath: '/',\n\n  authorizeUrl(params, options) {\n    params = params || {};\n    options = options || {};\n\n    let path = 'oauth/authorize';\n\n    // For Express accounts, the path changes\n    if (options.express) {\n      path = `express/${path}`;\n    }\n\n    if (!params.response_type) {\n      params.response_type = 'code';\n    }\n\n    if (!params.client_id) {\n      params.client_id = this._stripe.getClientId();\n    }\n\n    if (!params.scope) {\n      params.scope = 'read_write';\n    }\n\n    return `https://${oAuthHost}/${path}?${utils.stringifyRequestData(params)}`;\n  },\n\n  token: stripeMethod({\n    method: 'POST',\n    path: 'oauth/token',\n    host: oAuthHost,\n  }),\n\n  deauthorize(spec) {\n    if (!spec.client_id) {\n      spec.client_id = this._stripe.getClientId();\n    }\n\n    return stripeMethod({\n      method: 'POST',\n      path: 'oauth/deauthorize',\n      host: oAuthHost,\n    }).apply(this, arguments);\n  },\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'orders',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{id}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  pay: stripeMethod({\n    method: 'POST',\n    path: '/{id}/pay',\n  }),\n\n  returnOrder: stripeMethod({\n    method: 'POST',\n    path: '/{id}/returns',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'order_returns',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'payment_intents',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{intent}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{intent}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{intent}/cancel',\n  }),\n\n  capture: stripeMethod({\n    method: 'POST',\n    path: '/{intent}/capture',\n  }),\n\n  confirm: stripeMethod({\n    method: 'POST',\n    path: '/{intent}/confirm',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'payment_links',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{paymentLink}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{paymentLink}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  listLineItems: stripeMethod({\n    method: 'GET',\n    path: '/{paymentLink}/line_items',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'payment_methods',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{paymentMethod}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{paymentMethod}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  attach: stripeMethod({\n    method: 'POST',\n    path: '/{paymentMethod}/attach',\n  }),\n\n  detach: stripeMethod({\n    method: 'POST',\n    path: '/{paymentMethod}/detach',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'payouts',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{payout}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{payout}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{payout}/cancel',\n  }),\n\n  reverse: stripeMethod({\n    method: 'POST',\n    path: '/{payout}/reverse',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'plans',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{plan}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{plan}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{plan}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'prices',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{price}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{price}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'products',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{id}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{id}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'promotion_codes',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{promotionCode}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{promotionCode}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'quotes',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{quote}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{quote}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  accept: stripeMethod({\n    method: 'POST',\n    path: '/{quote}/accept',\n  }),\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{quote}/cancel',\n  }),\n\n  finalizeQuote: stripeMethod({\n    method: 'POST',\n    path: '/{quote}/finalize',\n  }),\n\n  listComputedUpfrontLineItems: stripeMethod({\n    method: 'GET',\n    path: '/{quote}/computed_upfront_line_items',\n    methodType: 'list',\n  }),\n\n  listLineItems: stripeMethod({\n    method: 'GET',\n    path: '/{quote}/line_items',\n    methodType: 'list',\n  }),\n\n  pdf: stripeMethod({\n    host: 'files.stripe.com',\n    method: 'GET',\n    path: '/{quote}/pdf',\n    streaming: true,\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'refunds',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{refund}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{refund}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'reviews',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{review}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  approve: stripeMethod({\n    method: 'POST',\n    path: '/{review}/approve',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'setup_attempts',\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'setup_intents',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{intent}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{intent}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{intent}/cancel',\n  }),\n\n  confirm: stripeMethod({\n    method: 'POST',\n    path: '/{intent}/confirm',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'shipping_rates',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{shippingRateToken}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{shippingRateToken}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'skus',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{id}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{id}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'sources',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{source}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{source}',\n  }),\n\n  listSourceTransactions: stripeMethod({\n    method: 'GET',\n    path: '/{source}/source_transactions',\n    methodType: 'list',\n  }),\n\n  verify: stripeMethod({\n    method: 'POST',\n    path: '/{source}/verify',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'subscriptions',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{subscriptionExposedId}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{subscriptionExposedId}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{subscriptionExposedId}',\n  }),\n\n  deleteDiscount: stripeMethod({\n    method: 'DELETE',\n    path: '/{subscriptionExposedId}/discount',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'subscription_items',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{item}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{item}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{item}',\n  }),\n\n  createUsageRecord: stripeMethod({\n    method: 'POST',\n    path: '/{subscriptionItem}/usage_records',\n  }),\n\n  listUsageRecordSummaries: stripeMethod({\n    method: 'GET',\n    path: '/{subscriptionItem}/usage_record_summaries',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'subscription_schedules',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{schedule}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{schedule}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{schedule}/cancel',\n  }),\n\n  release: stripeMethod({\n    method: 'POST',\n    path: '/{schedule}/release',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'tax_codes',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'tax_rates',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{taxRate}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{taxRate}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'tokens',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{token}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'topups',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{topup}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{topup}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{topup}/cancel',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'transfers',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{transfer}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{transfer}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  createReversal: stripeMethod({\n    method: 'POST',\n    path: '/{id}/reversals',\n  }),\n\n  retrieveReversal: stripeMethod({\n    method: 'GET',\n    path: '/{transfer}/reversals/{id}',\n  }),\n\n  updateReversal: stripeMethod({\n    method: 'POST',\n    path: '/{transfer}/reversals/{id}',\n  }),\n\n  listReversals: stripeMethod({\n    method: 'GET',\n    path: '/{id}/reversals',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'webhook_endpoints',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{webhookEndpoint}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{webhookEndpoint}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{webhookEndpoint}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'billing_portal/configurations',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{configuration}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{configuration}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'billing_portal/sessions',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'checkout/sessions',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{session}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  expire: stripeMethod({\n    method: 'POST',\n    path: '/{session}/expire',\n  }),\n\n  listLineItems: stripeMethod({\n    method: 'GET',\n    path: '/{session}/line_items',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'identity/verification_reports',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{report}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'identity/verification_sessions',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{session}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{session}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{session}/cancel',\n  }),\n\n  redact: stripeMethod({\n    method: 'POST',\n    path: '/{session}/redact',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'issuing/authorizations',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{authorization}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{authorization}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  approve: stripeMethod({\n    method: 'POST',\n    path: '/{authorization}/approve',\n  }),\n\n  decline: stripeMethod({\n    method: 'POST',\n    path: '/{authorization}/decline',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'issuing/cards',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{card}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{card}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  retrieveDetails: stripeMethod({\n    method: 'GET',\n    path: '/{card}/details',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'issuing/cardholders',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{cardholder}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{cardholder}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'issuing/disputes',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{dispute}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{dispute}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  submit: stripeMethod({\n    method: 'POST',\n    path: '/{dispute}/submit',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'issuing/transactions',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{transaction}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{transaction}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'radar/early_fraud_warnings',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{earlyFraudWarning}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'radar/value_lists',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{valueList}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{valueList}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{valueList}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'radar/value_list_items',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{item}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{item}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'reporting/report_runs',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{reportRun}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'reporting/report_types',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{reportType}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'sigma/scheduled_query_runs',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{scheduledQueryRun}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'terminal/connection_tokens',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'terminal/locations',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{location}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{location}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{location}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'terminal/readers',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{reader}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{reader}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{reader}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst resourceNamespace = require('./ResourceNamespace');\n\nmodule.exports = {\n  Accounts: require('./resources/Accounts'),\n  // Support Accounts for consistency, Account for backwards compatibility\n  Account: require('./resources/Accounts'),\n  AccountLinks: require('./resources/AccountLinks'),\n  ApplePayDomains: require('./resources/ApplePayDomains'),\n  ApplicationFees: require('./resources/ApplicationFees'),\n  Balance: require('./resources/Balance'),\n  BalanceTransactions: require('./resources/BalanceTransactions'),\n  Charges: require('./resources/Charges'),\n  CountrySpecs: require('./resources/CountrySpecs'),\n  Coupons: require('./resources/Coupons'),\n  CreditNotes: require('./resources/CreditNotes'),\n  Customers: require('./resources/Customers'),\n  Disputes: require('./resources/Disputes'),\n  EphemeralKeys: require('./resources/EphemeralKeys'),\n  Events: require('./resources/Events'),\n  ExchangeRates: require('./resources/ExchangeRates'),\n  Files: require('./resources/Files'),\n  FileLinks: require('./resources/FileLinks'),\n  Invoices: require('./resources/Invoices'),\n  InvoiceItems: require('./resources/InvoiceItems'),\n  IssuerFraudRecords: require('./resources/IssuerFraudRecords'),\n  Mandates: require('./resources/Mandates'),\n  OAuth: require('./resources/OAuth'),\n  Orders: require('./resources/Orders'),\n  OrderReturns: require('./resources/OrderReturns'),\n  PaymentIntents: require('./resources/PaymentIntents'),\n  PaymentLinks: require('./resources/PaymentLinks'),\n  PaymentMethods: require('./resources/PaymentMethods'),\n  Payouts: require('./resources/Payouts'),\n  Plans: require('./resources/Plans'),\n  Prices: require('./resources/Prices'),\n  Products: require('./resources/Products'),\n  PromotionCodes: require('./resources/PromotionCodes'),\n  Quotes: require('./resources/Quotes'),\n  Refunds: require('./resources/Refunds'),\n  Reviews: require('./resources/Reviews'),\n  SetupAttempts: require('./resources/SetupAttempts'),\n  SetupIntents: require('./resources/SetupIntents'),\n  ShippingRates: require('./resources/ShippingRates'),\n  Skus: require('./resources/SKUs'),\n  Sources: require('./resources/Sources'),\n  Subscriptions: require('./resources/Subscriptions'),\n  SubscriptionItems: require('./resources/SubscriptionItems'),\n  SubscriptionSchedules: require('./resources/SubscriptionSchedules'),\n  TaxCodes: require('./resources/TaxCodes'),\n  TaxRates: require('./resources/TaxRates'),\n  Tokens: require('./resources/Tokens'),\n  Topups: require('./resources/Topups'),\n  Transfers: require('./resources/Transfers'),\n  WebhookEndpoints: require('./resources/WebhookEndpoints'),\n  BillingPortal: resourceNamespace('billingPortal', {\n    Configurations: require('./resources/BillingPortal/Configurations'),\n    Sessions: require('./resources/BillingPortal/Sessions'),\n  }),\n  Checkout: resourceNamespace('checkout', {\n    Sessions: require('./resources/Checkout/Sessions'),\n  }),\n  Identity: resourceNamespace('identity', {\n    VerificationReports: require('./resources/Identity/VerificationReports'),\n    VerificationSessions: require('./resources/Identity/VerificationSessions'),\n  }),\n  Issuing: resourceNamespace('issuing', {\n    Authorizations: require('./resources/Issuing/Authorizations'),\n    Cards: require('./resources/Issuing/Cards'),\n    Cardholders: require('./resources/Issuing/Cardholders'),\n    Disputes: require('./resources/Issuing/Disputes'),\n    Transactions: require('./resources/Issuing/Transactions'),\n  }),\n  Radar: resourceNamespace('radar', {\n    EarlyFraudWarnings: require('./resources/Radar/EarlyFraudWarnings'),\n    ValueLists: require('./resources/Radar/ValueLists'),\n    ValueListItems: require('./resources/Radar/ValueListItems'),\n  }),\n  Reporting: resourceNamespace('reporting', {\n    ReportRuns: require('./resources/Reporting/ReportRuns'),\n    ReportTypes: require('./resources/Reporting/ReportTypes'),\n  }),\n  Sigma: resourceNamespace('sigma', {\n    ScheduledQueryRuns: require('./resources/Sigma/ScheduledQueryRuns'),\n  }),\n  Terminal: resourceNamespace('terminal', {\n    ConnectionTokens: require('./resources/Terminal/ConnectionTokens'),\n    Locations: require('./resources/Terminal/Locations'),\n    Readers: require('./resources/Terminal/Readers'),\n  }),\n};\n", "'use strict';\n\n/**\n * Interface encapsulating the various crypto computations used by the library,\n * allowing pluggable underlying crypto implementations.\n */\nclass CryptoProvider {\n  /**\n   * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n   * The output HMAC should be encoded in hexadecimal.\n   *\n   * Sample values for implementations:\n   * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n   * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n   */\n  computeHMACSignature(payload, secret) {\n    throw new Error('computeHMACSignature not implemented.');\n  }\n\n  /**\n   * Asynchronous version of `computeHMACSignature`. Some implementations may\n   * only allow support async signature computation.\n   *\n   * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n   * The output HMAC should be encoded in hexadecimal.\n   *\n   * Sample values for implementations:\n   * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n   * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n   */\n  computeHMACSignatureAsync(payload, secret) {\n    throw new Error('computeHMACSignatureAsync not implemented.');\n  }\n}\n\nmodule.exports = CryptoProvider;\n", "'use strict';\n\nconst crypto = require('crypto');\n\nconst CryptoProvider = require('./CryptoProvider');\n\n/**\n * `CryptoProvider which uses the Node `crypto` package for its computations.\n */\nclass NodeCryptoProvider extends CryptoProvider {\n  /** @override */\n  computeHMACSignature(payload, secret) {\n    return crypto\n      .createHmac('sha256', secret)\n      .update(payload, 'utf8')\n      .digest('hex');\n  }\n\n  /** @override */\n  async computeHMACSignatureAsync(payload, secret) {\n    const signature = await this.computeHMACSignature(payload, secret);\n    return signature;\n  }\n}\n\nmodule.exports = NodeCryptoProvider;\n", "'use strict';\n\nconst utils = require('./utils');\nconst {StripeError, StripeSignatureVerificationError} = require('./Error');\n\nconst Webhook = {\n  DEFAULT_TOLERANCE: 300, // 5 minutes\n\n  constructEvent(payload, header, secret, tolerance, cryptoProvider) {\n    this.signature.verifyHeader(\n      payload,\n      header,\n      secret,\n      tolerance || Webhook.DEFAULT_TOLERANCE,\n      cryptoProvider\n    );\n\n    const jsonPayload = JSON.parse(payload);\n    return jsonPayload;\n  },\n\n  async constructEventAsync(\n    payload,\n    header,\n    secret,\n    tolerance,\n    cryptoProvider\n  ) {\n    await this.signature.verifyHeaderAsync(\n      payload,\n      header,\n      secret,\n      tolerance || Webhook.DEFAULT_TOLERANCE,\n      cryptoProvider\n    );\n\n    const jsonPayload = JSON.parse(payload);\n    return jsonPayload;\n  },\n\n  /**\n   * Generates a header to be used for webhook mocking\n   *\n   * @typedef {object} opts\n   * @property {number} timestamp - Timestamp of the header. Defaults to Date.now()\n   * @property {string} payload - JSON stringified payload object, containing the 'id' and 'object' parameters\n   * @property {string} secret - Stripe webhook secret 'whsec_...'\n   * @property {string} scheme - Version of API to hit. Defaults to 'v1'.\n   * @property {string} signature - Computed webhook signature\n   * @property {CryptoProvider} cryptoProvider - Crypto provider to use for computing the signature if none was provided. Defaults to NodeCryptoProvider.\n   */\n  generateTestHeaderString: function(opts) {\n    if (!opts) {\n      throw new StripeError({\n        message: 'Options are required',\n      });\n    }\n\n    opts.timestamp =\n      Math.floor(opts.timestamp) || Math.floor(Date.now() / 1000);\n    opts.scheme = opts.scheme || signature.EXPECTED_SCHEME;\n\n    opts.cryptoProvider = opts.cryptoProvider || getNodeCryptoProvider();\n\n    opts.signature =\n      opts.signature ||\n      opts.cryptoProvider.computeHMACSignature(\n        opts.timestamp + '.' + opts.payload,\n        opts.secret\n      );\n\n    const generatedHeader = [\n      't=' + opts.timestamp,\n      opts.scheme + '=' + opts.signature,\n    ].join(',');\n\n    return generatedHeader;\n  },\n};\n\nconst signature = {\n  EXPECTED_SCHEME: 'v1',\n\n  verifyHeader(\n    encodedPayload,\n    encodedHeader,\n    secret,\n    tolerance,\n    cryptoProvider\n  ) {\n    const {\n      decodedHeader: header,\n      decodedPayload: payload,\n      details,\n    } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n\n    cryptoProvider = cryptoProvider || getNodeCryptoProvider();\n    const expectedSignature = cryptoProvider.computeHMACSignature(\n      makeHMACContent(payload, details),\n      secret\n    );\n\n    validateComputedSignature(\n      payload,\n      header,\n      details,\n      expectedSignature,\n      tolerance\n    );\n\n    return true;\n  },\n\n  async verifyHeaderAsync(\n    encodedPayload,\n    encodedHeader,\n    secret,\n    tolerance,\n    cryptoProvider\n  ) {\n    const {\n      decodedHeader: header,\n      decodedPayload: payload,\n      details,\n    } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n\n    cryptoProvider = cryptoProvider || getNodeCryptoProvider();\n\n    const expectedSignature = await cryptoProvider.computeHMACSignatureAsync(\n      makeHMACContent(payload, details),\n      secret\n    );\n\n    return validateComputedSignature(\n      payload,\n      header,\n      details,\n      expectedSignature,\n      tolerance\n    );\n  },\n};\n\nfunction makeHMACContent(payload, details) {\n  return `${details.timestamp}.${payload}`;\n}\n\nfunction parseEventDetails(encodedPayload, encodedHeader, expectedScheme) {\n  const decodedPayload = Buffer.isBuffer(encodedPayload)\n    ? encodedPayload.toString('utf8')\n    : encodedPayload;\n\n  // Express's type for `Request#headers` is `string | []string`\n  // which is because the `set-cookie` header is an array,\n  // but no other headers are an array (docs: https://nodejs.org/api/http.html#http_message_headers)\n  // (Express's Request class is an extension of http.IncomingMessage, and doesn't appear to be relevantly modified: https://github.com/expressjs/express/blob/master/lib/request.js#L31)\n  if (Array.isArray(encodedHeader)) {\n    throw new Error(\n      'Unexpected: An array was passed as a header, which should not be possible for the stripe-signature header.'\n    );\n  }\n\n  const decodedHeader = Buffer.isBuffer(encodedHeader)\n    ? encodedHeader.toString('utf8')\n    : encodedHeader;\n\n  const details = parseHeader(decodedHeader, expectedScheme);\n\n  if (!details || details.timestamp === -1) {\n    throw new StripeSignatureVerificationError({\n      message: 'Unable to extract timestamp and signatures from header',\n      detail: {\n        decodedHeader,\n        decodedPayload,\n      },\n    });\n  }\n\n  if (!details.signatures.length) {\n    throw new StripeSignatureVerificationError({\n      message: 'No signatures found with expected scheme',\n      detail: {\n        decodedHeader,\n        decodedPayload,\n      },\n    });\n  }\n\n  return {\n    decodedPayload,\n    decodedHeader,\n    details,\n  };\n}\n\nfunction validateComputedSignature(\n  payload,\n  header,\n  details,\n  expectedSignature,\n  tolerance\n) {\n  const signatureFound = !!details.signatures.filter(\n    utils.secureCompare.bind(utils, expectedSignature)\n  ).length;\n\n  if (!signatureFound) {\n    throw new StripeSignatureVerificationError({\n      message:\n        'No signatures found matching the expected signature for payload.' +\n        ' Are you passing the raw request body you received from Stripe?' +\n        ' https://github.com/stripe/stripe-node#webhook-signing',\n      detail: {\n        header,\n        payload,\n      },\n    });\n  }\n\n  const timestampAge = Math.floor(Date.now() / 1000) - details.timestamp;\n\n  if (tolerance > 0 && timestampAge > tolerance) {\n    throw new StripeSignatureVerificationError({\n      message: 'Timestamp outside the tolerance zone',\n      detail: {\n        header,\n        payload,\n      },\n    });\n  }\n\n  return true;\n}\n\nfunction parseHeader(header, scheme) {\n  if (typeof header !== 'string') {\n    return null;\n  }\n\n  return header.split(',').reduce(\n    (accum, item) => {\n      const kv = item.split('=');\n\n      if (kv[0] === 't') {\n        accum.timestamp = kv[1];\n      }\n\n      if (kv[0] === scheme) {\n        accum.signatures.push(kv[1]);\n      }\n\n      return accum;\n    },\n    {\n      timestamp: -1,\n      signatures: [],\n    }\n  );\n}\n\nlet webhooksNodeCryptoProviderInstance = null;\n\n/**\n * Lazily instantiate a NodeCryptoProvider instance. This is a stateless object\n * so a singleton can be used here.\n */\nfunction getNodeCryptoProvider() {\n  if (!webhooksNodeCryptoProviderInstance) {\n    const NodeCryptoProvider = require('./crypto/NodeCryptoProvider');\n    webhooksNodeCryptoProviderInstance = new NodeCryptoProvider();\n  }\n  return webhooksNodeCryptoProviderInstance;\n}\n\nWebhook.signature = signature;\n\nmodule.exports = Webhook;\n", "'use strict';\n\nconst http = require('http');\nconst https = require('https');\n\nconst {HttpClient, HttpClientResponse} = require('./HttpClient');\n\nconst defaultHttpAgent = new http.Agent({keepAlive: true});\nconst defaultHttpsAgent = new https.Agent({keepAlive: true});\n\n/**\n * HTTP client which uses the Node `http` and `https` packages to issue\n * requests.`\n */\nclass NodeHttpClient extends HttpClient {\n  constructor(agent) {\n    super();\n    this._agent = agent;\n  }\n\n  /** @override. */\n  getClientName() {\n    return 'node';\n  }\n\n  makeRequest(\n    host,\n    port,\n    path,\n    method,\n    headers,\n    requestData,\n    protocol,\n    timeout\n  ) {\n    const isInsecureConnection = protocol === 'http';\n\n    let agent = this._agent;\n    if (!agent) {\n      agent = isInsecureConnection ? defaultHttpAgent : defaultHttpsAgent;\n    }\n\n    const requestPromise = new Promise((resolve, reject) => {\n      const req = (isInsecureConnection ? http : https).request({\n        host: host,\n        port: port,\n        path,\n        method,\n        agent,\n        headers,\n        ciphers: 'DEFAULT:!aNULL:!eNULL:!LOW:!EXPORT:!SSLv2:!MD5',\n      });\n\n      req.setTimeout(timeout, () => {\n        req.destroy(HttpClient.makeTimeoutError());\n      });\n\n      req.on('response', (res) => {\n        resolve(new NodeHttpClientResponse(res));\n      });\n\n      req.on('error', (error) => {\n        reject(error);\n      });\n\n      req.once('socket', (socket) => {\n        if (socket.connecting) {\n          socket.once(\n            isInsecureConnection ? 'connect' : 'secureConnect',\n            () => {\n              // Send payload; we're safe:\n              req.write(requestData);\n              req.end();\n            }\n          );\n        } else {\n          // we're already connected\n          req.write(requestData);\n          req.end();\n        }\n      });\n    });\n\n    return requestPromise;\n  }\n}\n\nclass NodeHttpClientResponse extends HttpClientResponse {\n  constructor(res) {\n    super(res.statusCode, res.headers || {});\n    this._res = res;\n  }\n\n  getRawResponse() {\n    return this._res;\n  }\n\n  toStream(streamCompleteCallback) {\n    // The raw response is itself the stream, so we just return that. To be\n    // backwards compatible, we should invoke the streamCompleteCallback only\n    // once the stream has been fully consumed.\n    this._res.once('end', () => streamCompleteCallback());\n    return this._res;\n  }\n\n  toJSON() {\n    return new Promise((resolve, reject) => {\n      let response = '';\n\n      this._res.setEncoding('utf8');\n      this._res.on('data', (chunk) => {\n        response += chunk;\n      });\n      this._res.once('end', () => {\n        try {\n          resolve(JSON.parse(response));\n        } catch (e) {\n          reject(e);\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = {NodeHttpClient, NodeHttpClientResponse};\n", "'use strict';\n\nconst {HttpClient, HttpClientResponse} = require('./HttpClient');\n\n/**\n * HTTP client which uses a `fetch` function to issue requests.\n *\n * By default relies on the global `fetch` function, but an optional function\n * can be passed in. If passing in a function, it is expected to match the Web\n * Fetch API. As an example, this could be the function provided by the\n * node-fetch package (https://github.com/node-fetch/node-fetch).\n */\nclass FetchHttpClient extends HttpClient {\n  constructor(fetchFn) {\n    super();\n    this._fetchFn = fetchFn;\n  }\n\n  /** @override. */\n  getClientName() {\n    return 'fetch';\n  }\n\n  makeRequest(\n    host,\n    port,\n    path,\n    method,\n    headers,\n    requestData,\n    protocol,\n    timeout\n  ) {\n    const isInsecureConnection = protocol === 'http';\n\n    const url = new URL(\n      path,\n      `${isInsecureConnection ? 'http' : 'https'}://${host}`\n    );\n    url.port = port;\n\n    const fetchFn = this._fetchFn || fetch;\n    const fetchPromise = fetchFn(url.toString(), {\n      method,\n      headers,\n      body: requestData || undefined,\n    });\n\n    // The Fetch API does not support passing in a timeout natively, so a\n    // timeout promise is constructed to race against the fetch and preempt the\n    // request, simulating a timeout.\n    //\n    // This timeout behavior differs from Node:\n    // - Fetch uses a single timeout for the entire length of the request.\n    // - Node is more fine-grained and resets the timeout after each stage of\n    //   the request.\n    //\n    // As an example, if the timeout is set to 30s and the connection takes 20s\n    // to be established followed by 20s for the body, Fetch would timeout but\n    // Node would not. The more fine-grained timeout cannot be implemented with\n    // fetch.\n    let pendingTimeoutId;\n    const timeoutPromise = new Promise((_, reject) => {\n      pendingTimeoutId = setTimeout(() => {\n        pendingTimeoutId = null;\n        reject(HttpClient.makeTimeoutError());\n      }, timeout);\n    });\n\n    return Promise.race([fetchPromise, timeoutPromise])\n      .then((res) => {\n        return new FetchHttpClientResponse(res);\n      })\n      .finally(() => {\n        if (pendingTimeoutId) {\n          clearTimeout(pendingTimeoutId);\n        }\n      });\n  }\n}\n\nclass FetchHttpClientResponse extends HttpClientResponse {\n  constructor(res) {\n    super(\n      res.status,\n      FetchHttpClientResponse._transformHeadersToObject(res.headers)\n    );\n    this._res = res;\n  }\n\n  getRawResponse() {\n    return this._res;\n  }\n\n  toStream(streamCompleteCallback) {\n    // Unfortunately `fetch` does not have event handlers for when the stream is\n    // completely read. We therefore invoke the streamCompleteCallback right\n    // away. This callback emits a response event with metadata and completes\n    // metrics, so it's ok to do this without waiting for the stream to be\n    // completely read.\n    streamCompleteCallback();\n\n    // Fetch's `body` property is expected to be a readable stream of the body.\n    return this._res.body;\n  }\n\n  toJSON() {\n    return this._res.json();\n  }\n\n  static _transformHeadersToObject(headers) {\n    // Fetch uses a Headers instance so this must be converted to a barebones\n    // JS object to meet the HttpClient interface.\n    const headersObj = {};\n\n    for (const entry of headers) {\n      if (!Array.isArray(entry) || entry.length != 2) {\n        throw new Error(\n          'Response objects produced by the fetch function given to FetchHttpClient do not have an iterable headers map. Response#headers should be an iterable object.'\n        );\n      }\n\n      headersObj[entry[0]] = entry[1];\n    }\n\n    return headersObj;\n  }\n}\n\nmodule.exports = {FetchHttpClient, FetchHttpClientResponse};\n", "'use strict';\n\nconst CryptoProvider = require('./CryptoProvider');\n\n/**\n * `CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n *\n * This only supports asynchronous operations.\n */\nclass SubtleCryptoProvider extends CryptoProvider {\n  constructor(subtleCrypto) {\n    super();\n\n    // If no subtle crypto is interface, default to the global namespace. This\n    // is to allow custom interfaces (eg. using the Node webcrypto interface in\n    // tests).\n    this.subtleCrypto = subtleCrypto || crypto.subtle;\n  }\n\n  /** @override */\n  computeHMACSignature(payload, secret) {\n    throw new Error(\n      'SubtleCryptoProvider cannot be used in a synchronous context.'\n    );\n  }\n\n  /** @override */\n  async computeHMACSignatureAsync(payload, secret) {\n    const encoder = new TextEncoder('utf-8');\n\n    const key = await this.subtleCrypto.importKey(\n      'raw',\n      encoder.encode(secret),\n      {\n        name: 'HMAC',\n        hash: {name: 'SHA-256'},\n      },\n      false,\n      ['sign']\n    );\n\n    const signatureBuffer = await this.subtleCrypto.sign(\n      'hmac',\n      key,\n      encoder.encode(payload)\n    );\n\n    // crypto.subtle returns the signature in base64 format. This must be\n    // encoded in hex to match the CryptoProvider contract. We map each byte in\n    // the buffer to its corresponding hex octet and then combine into a string.\n    const signatureBytes = new Uint8Array(signatureBuffer);\n    const signatureHexCodes = new Array(signatureBytes.length);\n\n    for (let i = 0; i < signatureBytes.length; i++) {\n      signatureHexCodes[i] = byteHexMapping[signatureBytes[i]];\n    }\n\n    return signatureHexCodes.join('');\n  }\n}\n\n// Cached mapping of byte to hex representation. We do this once to avoid re-\n// computing every time we need to convert the result of a signature to hex.\nconst byteHexMapping = new Array(256);\nfor (let i = 0; i < byteHexMapping.length; i++) {\n  byteHexMapping[i] = i.toString(16).padStart(2, '0');\n}\n\nmodule.exports = SubtleCryptoProvider;\n", "'use strict';\n\nconst resources = require('./resources');\n\nconst DEFAULT_HOST = 'api.stripe.com';\nconst DEFAULT_PORT = '443';\nconst DEFAULT_BASE_PATH = '/v1/';\nconst DEFAULT_API_VERSION = null;\n\nconst DEFAULT_TIMEOUT = 80000;\n\nStripe.PACKAGE_VERSION = require('../package.json').version;\n\nconst utils = require('./utils');\nconst {determineProcessUserAgentProperties, emitWarning} = utils;\n\nStripe.USER_AGENT = {\n  bindings_version: Stripe.PACKAGE_VERSION,\n  lang: 'node',\n  publisher: 'stripe',\n  uname: null,\n  typescript: false,\n  ...determineProcessUserAgentProperties(),\n};\n\n/** @private */\nStripe._UNAME_CACHE = null;\n\nconst MAX_NETWORK_RETRY_DELAY_SEC = 2;\nconst INITIAL_NETWORK_RETRY_DELAY_SEC = 0.5;\n\nconst APP_INFO_PROPERTIES = ['name', 'version', 'url', 'partner_id'];\nconst ALLOWED_CONFIG_PROPERTIES = [\n  'apiVersion',\n  'typescript',\n  'maxNetworkRetries',\n  'httpAgent',\n  'httpClient',\n  'timeout',\n  'host',\n  'port',\n  'protocol',\n  'telemetry',\n  'appInfo',\n  'stripeAccount',\n];\n\nconst EventEmitter = require('events').EventEmitter;\n\nStripe.StripeResource = require('./StripeResource');\nStripe.resources = resources;\n\nconst {HttpClient, HttpClientResponse} = require('./net/HttpClient');\nStripe.HttpClient = HttpClient;\nStripe.HttpClientResponse = HttpClientResponse;\n\nconst CryptoProvider = require('./crypto/CryptoProvider');\nStripe.CryptoProvider = CryptoProvider;\n\nfunction Stripe(key, config = {}) {\n  if (!(this instanceof Stripe)) {\n    return new Stripe(key, config);\n  }\n\n  const props = this._getPropsFromConfig(config);\n\n  Object.defineProperty(this, '_emitter', {\n    value: new EventEmitter(),\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  });\n\n  this.VERSION = Stripe.PACKAGE_VERSION;\n\n  this.on = this._emitter.on.bind(this._emitter);\n  this.once = this._emitter.once.bind(this._emitter);\n  this.off = this._emitter.removeListener.bind(this._emitter);\n\n  if (\n    props.protocol &&\n    props.protocol !== 'https' &&\n    (!props.host || /\\.stripe\\.com$/.test(props.host))\n  ) {\n    throw new Error(\n      'The `https` protocol must be used when sending requests to `*.stripe.com`'\n    );\n  }\n\n  const agent = props.httpAgent || null;\n\n  this._api = {\n    auth: null,\n    host: props.host || DEFAULT_HOST,\n    port: props.port || DEFAULT_PORT,\n    protocol: props.protocol || 'https',\n    basePath: DEFAULT_BASE_PATH,\n    version: props.apiVersion || DEFAULT_API_VERSION,\n    timeout: utils.validateInteger('timeout', props.timeout, DEFAULT_TIMEOUT),\n    maxNetworkRetries: utils.validateInteger(\n      'maxNetworkRetries',\n      props.maxNetworkRetries,\n      0\n    ),\n    agent: agent,\n    httpClient: props.httpClient || Stripe.createNodeHttpClient(agent),\n    dev: false,\n    stripeAccount: props.stripeAccount || null,\n  };\n\n  const typescript = props.typescript || false;\n  if (typescript !== Stripe.USER_AGENT.typescript) {\n    // The mutation here is uncomfortable, but likely fastest;\n    // serializing the user agent involves shelling out to the system,\n    // and given some users may instantiate the library many times without switching between TS and non-TS,\n    // we only want to incur the performance hit when that actually happens.\n    Stripe.USER_AGENT.typescript = typescript;\n  }\n\n  if (props.appInfo) {\n    this._setAppInfo(props.appInfo);\n  }\n\n  this._prepResources();\n  this._setApiKey(key);\n\n  this.errors = require('./Error');\n  this.webhooks = require('./Webhooks');\n\n  this._prevRequestMetrics = [];\n  this._enableTelemetry = props.telemetry !== false;\n\n  // Expose StripeResource on the instance too\n  this.StripeResource = Stripe.StripeResource;\n}\n\nStripe.errors = require('./Error');\nStripe.webhooks = require('./Webhooks');\n\nStripe.createNodeHttpClient = (agent) => {\n  const {NodeHttpClient} = require('./net/NodeHttpClient');\n  return new NodeHttpClient(agent);\n};\n\n/**\n * Creates an HTTP client for issuing Stripe API requests which uses the Web\n * Fetch API.\n *\n * A fetch function can optionally be passed in as a parameter. If none is\n * passed, will default to the default `fetch` function in the global scope.\n */\nStripe.createFetchHttpClient = (fetchFn) => {\n  const {FetchHttpClient} = require('./net/FetchHttpClient');\n  return new FetchHttpClient(fetchFn);\n};\n\n/**\n * Create a CryptoProvider which uses the built-in Node crypto libraries for\n * its crypto operations.\n */\nStripe.createNodeCryptoProvider = () => {\n  const NodeCryptoProvider = require('./crypto/NodeCryptoProvider');\n  return new NodeCryptoProvider();\n};\n\n/**\n * Creates a CryptoProvider which uses the Subtle Crypto API from the Web\n * Crypto API spec for its crypto operations.\n *\n * A SubtleCrypto interface can optionally be passed in as a parameter. If none\n * is passed, will default to the default `crypto.subtle` object in the global\n * scope.\n */\nStripe.createSubtleCryptoProvider = (subtleCrypto) => {\n  const SubtleCryptoProvider = require('./crypto/SubtleCryptoProvider');\n  return new SubtleCryptoProvider(subtleCrypto);\n};\n\nStripe.prototype = {\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   host: 'example.com',\n   *   port: '8080',\n   *   protocol: 'http',\n   * });\n   *\n   */\n  setHost(host, port, protocol) {\n    emitWarning(\n      '`setHost` is deprecated. Use the `host` config option instead.'\n    );\n    this._setApiField('host', host);\n    if (port) {\n      this.setPort(port);\n    }\n    if (protocol) {\n      this.setProtocol(protocol);\n    }\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   protocol: 'http',\n   * });\n   *\n   */\n  setProtocol(protocol) {\n    emitWarning(\n      '`setProtocol` is deprecated. Use the `protocol` config option instead.'\n    );\n    this._setApiField('protocol', protocol.toLowerCase());\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   port: 3000,\n   * });\n   *\n   */\n  setPort(port) {\n    emitWarning(\n      '`setPort` is deprecated. Use the `port` config option instead.'\n    );\n    this._setApiField('port', port);\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   apiVersion: API_VERSION,\n   * });\n   *\n   */\n  setApiVersion(version) {\n    emitWarning(\n      '`setApiVersion` is deprecated. Use the `apiVersion` config or request option instead.'\n    );\n    if (version) {\n      this._setApiField('version', version);\n    }\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY);\n   *\n   * Or, for Stripe Connect, use `stripeAccount` instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   stripeAccount: 'acct_...',\n   * });\n   *\n   * Or, to use a different apiKey on a given request:\n   *\n   * stripe.customers.create(params, {apiKey: 'sk_test_...'});\n   */\n  setApiKey(key) {\n    emitWarning(\n      '`setApiKey` is deprecated. Use the `apiKey` request option instead.'\n    );\n    this._setApiKey(key);\n  },\n\n  /**\n   * @private\n   */\n  _setApiKey(key) {\n    if (key) {\n      this._setApiField('auth', `Bearer ${key}`);\n    }\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   timeout: TIMEOUT_MS,\n   * });\n   */\n  setTimeout(timeout) {\n    emitWarning(\n      '`setTimeout` is deprecated. Use the `timeout` config or request option instead.'\n    );\n    this._setApiField('timeout', timeout == null ? DEFAULT_TIMEOUT : timeout);\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   appInfo: {\n   *     name: 'MyPlugin',\n   *     version: '1.4.2',\n   *     url: 'https://myplugin.com',\n   *     partner_id: '1234',\n   *   },\n   * });\n   */\n  setAppInfo(info) {\n    emitWarning(\n      '`setAppInfo` is deprecated. Use the `appInfo` config option instead.'\n    );\n    this._setAppInfo(info);\n  },\n\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setAppInfo(info) {\n    if (info && typeof info !== 'object') {\n      throw new Error('AppInfo must be an object.');\n    }\n\n    if (info && !info.name) {\n      throw new Error('AppInfo.name is required');\n    }\n\n    info = info || {};\n\n    const appInfo = APP_INFO_PROPERTIES.reduce((accum, prop) => {\n      if (typeof info[prop] == 'string') {\n        accum = accum || {};\n\n        accum[prop] = info[prop];\n      }\n\n      return accum;\n    }, undefined);\n\n    this._appInfo = appInfo;\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const ProxyAgent = require('https-proxy-agent');\n   * const stripe = new Stripe(API_KEY, {\n   *   httpAgent: new ProxyAgent(process.env.http_proxy),\n   * });\n   *\n   */\n  setHttpAgent(agent) {\n    emitWarning(\n      '`setHttpAgent` is deprecated. Use the `httpAgent` config option instead.'\n    );\n    this._setApiField('agent', agent);\n  },\n\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setApiField(key, value) {\n    this._api[key] = value;\n  },\n\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getApiField(key) {\n    return this._api[key];\n  },\n\n  setClientId(clientId) {\n    this._clientId = clientId;\n  },\n\n  getClientId() {\n    return this._clientId;\n  },\n\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getConstant: (c) => {\n    switch (c) {\n      case 'DEFAULT_HOST':\n        return DEFAULT_HOST;\n      case 'DEFAULT_PORT':\n        return DEFAULT_PORT;\n      case 'DEFAULT_BASE_PATH':\n        return DEFAULT_BASE_PATH;\n      case 'DEFAULT_API_VERSION':\n        return DEFAULT_API_VERSION;\n      case 'DEFAULT_TIMEOUT':\n        return DEFAULT_TIMEOUT;\n      case 'MAX_NETWORK_RETRY_DELAY_SEC':\n        return MAX_NETWORK_RETRY_DELAY_SEC;\n      case 'INITIAL_NETWORK_RETRY_DELAY_SEC':\n        return INITIAL_NETWORK_RETRY_DELAY_SEC;\n    }\n    return Stripe[c];\n  },\n\n  getMaxNetworkRetries() {\n    return this.getApiField('maxNetworkRetries');\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   maxNetworkRetries: 2,\n   * });\n   *\n   */\n  setMaxNetworkRetries(maxNetworkRetries) {\n    this._setApiNumberField('maxNetworkRetries', maxNetworkRetries);\n  },\n\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setApiNumberField(prop, n, defaultVal) {\n    const val = utils.validateInteger(prop, n, defaultVal);\n\n    this._setApiField(prop, val);\n  },\n\n  getMaxNetworkRetryDelay() {\n    return MAX_NETWORK_RETRY_DELAY_SEC;\n  },\n\n  getInitialNetworkRetryDelay() {\n    return INITIAL_NETWORK_RETRY_DELAY_SEC;\n  },\n\n  /**\n   * @private\n   */\n  getUname(cb) {\n    if (!Stripe._UNAME_CACHE) {\n      Stripe._UNAME_CACHE = new Promise((resolve) => {\n        utils.safeExec('uname -a', (err, uname) => {\n          resolve(uname);\n        });\n      });\n    }\n    Stripe._UNAME_CACHE.then((uname) => cb(uname));\n  },\n\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   *\n   * Gets a JSON version of a User-Agent and uses a cached version for a slight\n   * speed advantage.\n   */\n  getClientUserAgent(cb) {\n    return this.getClientUserAgentSeeded(Stripe.USER_AGENT, cb);\n  },\n\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   *\n   * Gets a JSON version of a User-Agent by encoding a seeded object and\n   * fetching a uname from the system.\n   */\n  getClientUserAgentSeeded(seed, cb) {\n    this.getUname((uname) => {\n      const userAgent = {};\n      for (const field in seed) {\n        userAgent[field] = encodeURIComponent(seed[field]);\n      }\n\n      // URI-encode in case there are unusual characters in the system's uname.\n      userAgent.uname = encodeURIComponent(uname || 'UNKNOWN');\n\n      const client = this.getApiField('httpClient');\n      if (client) {\n        userAgent.httplib = encodeURIComponent(client.getClientName());\n      }\n\n      if (this._appInfo) {\n        userAgent.application = this._appInfo;\n      }\n\n      cb(JSON.stringify(userAgent));\n    });\n  },\n\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getAppInfoAsString() {\n    if (!this._appInfo) {\n      return '';\n    }\n\n    let formatted = this._appInfo.name;\n\n    if (this._appInfo.version) {\n      formatted += `/${this._appInfo.version}`;\n    }\n\n    if (this._appInfo.url) {\n      formatted += ` (${this._appInfo.url})`;\n    }\n\n    return formatted;\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   telemetry: false,\n   * });\n   *\n   */\n  setTelemetryEnabled(enableTelemetry) {\n    emitWarning(\n      '`setTelemetryEnabled` is deprecated. Use the `telemetry` config option instead.'\n    );\n    this._enableTelemetry = enableTelemetry;\n  },\n\n  getTelemetryEnabled() {\n    return this._enableTelemetry;\n  },\n\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _prepResources() {\n    for (const name in resources) {\n      this[utils.pascalToCamelCase(name)] = new resources[name](this);\n    }\n  },\n\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _getPropsFromConfig(config) {\n    // If config is null or undefined, just bail early with no props\n    if (!config) {\n      return {};\n    }\n\n    // config can be an object or a string\n    const isString = typeof config === 'string';\n    const isObject = config === Object(config) && !Array.isArray(config);\n\n    if (!isObject && !isString) {\n      throw new Error('Config must either be an object or a string');\n    }\n\n    // If config is a string, we assume the old behavior of passing in a string representation of the api version\n    if (isString) {\n      return {\n        apiVersion: config,\n      };\n    }\n\n    // If config is an object, we assume the new behavior and make sure it doesn't contain any unexpected values\n    const values = Object.keys(config).filter(\n      (value) => !ALLOWED_CONFIG_PROPERTIES.includes(value)\n    );\n\n    if (values.length > 0) {\n      throw new Error(\n        `Config object may only contain the following: ${ALLOWED_CONFIG_PROPERTIES.join(\n          ', '\n        )}`\n      );\n    }\n\n    return config;\n  },\n};\n\nmodule.exports = Stripe;\n\n// expose constructor as a named property to enable mocking with Sinon.JS\nmodule.exports.Stripe = Stripe;\n\n// Allow use with the TypeScript compiler without `esModuleInterop`.\n// We may also want to add `Object.defineProperty(exports, \"__esModule\", {value: true});` in the future, so that Babel users will use the `default` version.\nmodule.exports.default = Stripe;\n", "import Stripe from \"stripe\";\nimport handler from \"./util/handler\";\nimport { calculateCost } from \"./util/cost\";\n\nexport const main = handler(async (event) => {\n  const { storage, source } = JSON.parse(event.body);\n  const amount = calculateCost(storage);\n  const description = \"Scratch charge\";\n\n  // Load our secret key from the  environment variables\n  const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);\n\n  await stripe.charges.create({\n    source,\n    amount,\n    description,\n    currency: \"usd\",\n  });\n\n  return { status: true };\n});\n", "import util from \"util\";\nimport AWS from \"aws-sdk\";\n\nlet logs;\n\n// Log AWS SDK calls\nAWS.config.logger = { log: debug };\n\nexport default function debug() {\n  logs.push({\n    date: new Date(),\n    string: util.format.apply(null, arguments),\n  });\n}\n\nexport function init(event) {\n  logs = [];\n\n  // Log API event\n  debug(\"API event\", {\n    body: event.body,\n    pathParameters: event.pathParameters,\n    queryStringParameters: event.queryStringParameters,\n  });\n}\n\nexport function flush(e) {\n  logs.forEach(({ date, string }) => console.debug(date, string));\n  console.error(e);\n}\n", "import * as debug from \"./debug\";\n\nexport default function handler(lambda) {\n  return async function (event, context) {\n    let body, statusCode;\n\n    // Start debugger\n    debug.init(event);\n\n    try {\n      // Run the Lambda\n      body = await lambda(event, context);\n      statusCode = 200;\n    } catch (e) {\n      // Print debug messages\n      debug.flush(e);\n\n      body = { error: e.message };\n      statusCode = 500;\n    }\n\n    // Return HTTP response\n    return {\n      statusCode,\n      body: JSON.stringify(body),\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": true,\n      },\n    };\n  };\n}\n", "export function calculateCost(storage) {\n  const rate = storage <= 10 ? 4 : storage <= 100 ? 2 : 1;\n  return rate * storage * 100;\n}\n"],
  "mappings": "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",
  "names": []
}
